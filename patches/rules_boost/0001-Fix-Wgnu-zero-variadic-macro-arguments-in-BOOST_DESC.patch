From 76459364e932152ca9964e875e1f1a99cf9677fa Mon Sep 17 00:00:00 2001
From: Horolsky <oleksandr.khorolskyi@outlook.com>
Date: Sun, 2 Mar 2025 21:28:32 +0200
Subject: [PATCH] Fix Wgnu-zero-variadic-macro-arguments in
 BOOST_DESCRIBE_STRUCT

---
 ...riadic-macro-arguments-in-BOOST_DESC.patch | 108 ++++++++++++++++++
 boost/boost.bzl                               |   4 +
 2 files changed, 112 insertions(+)
 create mode 100644 0001-Fix-Wgnu-zero-variadic-macro-arguments-in-BOOST_DESC.patch

diff --git a/0001-Fix-Wgnu-zero-variadic-macro-arguments-in-BOOST_DESC.patch b/0001-Fix-Wgnu-zero-variadic-macro-arguments-in-BOOST_DESC.patch
new file mode 100644
index 0000000..8980e51
--- /dev/null
+++ b/0001-Fix-Wgnu-zero-variadic-macro-arguments-in-BOOST_DESC.patch
@@ -0,0 +1,108 @@
+From 4b1e6d961ea0ae618e9e6ea12e47d6caecd9371b Mon Sep 17 00:00:00 2001
+From: Horolsky <oleksandr.khorolskyi@outlook.com>
+Date: Sun, 2 Mar 2025 21:24:36 +0200
+Subject: [PATCH] Fix Wgnu-zero-variadic-macro-arguments in
+ BOOST_DESCRIBE_STRUCT
+
+---
+ .../describe/include/boost/describe/class.hpp |  8 +++----
+ .../include/boost/describe/detail/bases.hpp   | 21 ++++++++++++++++++-
+ .../include/boost/describe/detail/members.hpp | 11 ++++++++++
+ 3 files changed, 35 insertions(+), 5 deletions(-)
+
+diff --git a/libs/describe/include/boost/describe/class.hpp b/libs/describe/include/boost/describe/class.hpp
+index 8d3fdcbd..90f9cec3 100644
+--- a/libs/describe/include/boost/describe/class.hpp
++++ b/libs/describe/include/boost/describe/class.hpp
+@@ -37,8 +37,8 @@ namespace describe
+     static_assert(std::is_class<C>::value || std::is_union<C>::value, "BOOST_DESCRIBE_STRUCT should only be used with class types"); \
+     BOOST_DESCRIBE_BASES(C, BOOST_DESCRIBE_PP_UNPACK Bases) \
+     BOOST_DESCRIBE_PUBLIC_MEMBERS(C, BOOST_DESCRIBE_PP_UNPACK Members) \
+-    BOOST_DESCRIBE_PROTECTED_MEMBERS(C) \
+-    BOOST_DESCRIBE_PRIVATE_MEMBERS(C)
++    BOOST_DESCRIBE_PROTECTED_MEMBERS_EMPTY(C) \
++    BOOST_DESCRIBE_PRIVATE_MEMBERS_EMPTY(C)
+ 
+ #else
+ 
+@@ -63,8 +63,8 @@ namespace describe
+     static_assert(std::is_class<C>::value || std::is_union<C>::value, "BOOST_DESCRIBE_STRUCT should only be used with class types"); \
+     BOOST_DESCRIBE_MAYBE_UNUSED BOOST_DESCRIBE_BASES_(C BOOST_DESCRIBE_PP_UNPACK Bases) \
+     BOOST_DESCRIBE_MAYBE_UNUSED BOOST_DESCRIBE_PUBLIC_MEMBERS_(C BOOST_DESCRIBE_PP_UNPACK Members) \
+-    BOOST_DESCRIBE_MAYBE_UNUSED BOOST_DESCRIBE_PROTECTED_MEMBERS_(C) \
+-    BOOST_DESCRIBE_MAYBE_UNUSED BOOST_DESCRIBE_PRIVATE_MEMBERS_(C)
++    BOOST_DESCRIBE_MAYBE_UNUSED BOOST_DESCRIBE_PROTECTED_MEMBERS_EMPTY(C) \
++    BOOST_DESCRIBE_MAYBE_UNUSED BOOST_DESCRIBE_PRIVATE_MEMBERS_EMPTY(C)
+ 
+ #endif
+ 
+diff --git a/libs/describe/include/boost/describe/detail/bases.hpp b/libs/describe/include/boost/describe/detail/bases.hpp
+index 3a08064d..e25a9c91 100644
+--- a/libs/describe/include/boost/describe/detail/bases.hpp
++++ b/libs/describe/include/boost/describe/detail/bases.hpp
+@@ -8,6 +8,8 @@
+ #include <boost/describe/detail/compute_base_modifiers.hpp>
+ #include <boost/describe/detail/pp_for_each.hpp>
+ #include <boost/describe/detail/list.hpp>
++#include <boost/mp11/algorithm.hpp>
++#include <boost/mp11/integral.hpp>
+ #include <type_traits>
+ 
+ namespace boost
+@@ -26,13 +28,30 @@ template<class C, class B> struct base_descriptor
+     static constexpr unsigned modifiers = compute_base_modifiers<C, B>();
+ };
+ 
++
++template<class C>
++struct base_descriptor<C, void>
++{
++    using type = void;
++    static constexpr unsigned modifiers = 0U;
++};
++
++template <class T>
++struct filter_void_bases;
++
++template<class C, class B>
++struct filter_void_bases<base_descriptor<C, B>> : mp11::mp_true {};
++
++template<class C>
++struct filter_void_bases<base_descriptor<C, void>> : mp11::mp_false {};
++
+ #ifndef __cpp_inline_variables
+ template<class C, class B> constexpr unsigned base_descriptor<C, B>::modifiers;
+ #endif
+ 
+ template<class... T> auto base_descriptor_fn_impl( int, T... )
+ {
+-    return list<T...>();
++    return mp11::mp_filter<filter_void_bases, list<T...>>();
+ }
+ 
+ #define BOOST_DESCRIBE_BASE_IMPL(C, B) , boost::describe::detail::base_descriptor<C, B>()
+diff --git a/libs/describe/include/boost/describe/detail/members.hpp b/libs/describe/include/boost/describe/detail/members.hpp
+index 8be5387f..eb68cbf3 100644
+--- a/libs/describe/include/boost/describe/detail/members.hpp
++++ b/libs/describe/include/boost/describe/detail/members.hpp
+@@ -77,6 +77,17 @@ template<class C, class F> constexpr auto mfn( F * p ) { return p; }
+ 
+ #endif
+ 
++
++
++#define BOOST_DESCRIBE_PUBLIC_MEMBERS_EMPTY(C) inline auto boost_public_member_descriptor_fn( C** ) \
++{ return boost::describe::detail::member_descriptor_fn_impl<boost::describe::mod_public>( 0 ); }
++
++#define BOOST_DESCRIBE_PROTECTED_MEMBERS_EMPTY(C) inline auto boost_protected_member_descriptor_fn( C** ) \
++{ return boost::describe::detail::member_descriptor_fn_impl<boost::describe::mod_protected>( 0 ); }
++
++#define BOOST_DESCRIBE_PRIVATE_MEMBERS_EMPTY(C) inline auto boost_private_member_descriptor_fn( C** ) \
++{ return boost::describe::detail::member_descriptor_fn_impl<boost::describe::mod_private>( 0 ); }
++
+ } // namespace detail
+ } // namespace describe
+ } // namespace boost
+-- 
+2.34.1
+
diff --git a/boost/boost.bzl b/boost/boost.bzl
index 8e7a820..292bb8f 100644
--- a/boost/boost.bzl
+++ b/boost/boost.bzl
@@ -159,6 +159,10 @@ def boost_deps():
         build_file = "@com_github_nelhage_rules_boost//:boost.BUILD",
         patch_cmds = ["rm -f doc/pdf/BUILD"],
         patch_cmds_win = ["Remove-Item -Force doc/pdf/BUILD"],
+        patch_args = ["-p1"],
+        patches = [
+            "@com_github_nelhage_rules_boost//:0001-Fix-Wgnu-zero-variadic-macro-arguments-in-BOOST_DESC.patch",
+        ],
         url = "https://github.com/boostorg/boost/releases/download/boost-1.84.0/boost-1.84.0.tar.gz",
         sha256 = "4d27e9efed0f6f152dc28db6430b9d3dfb40c0345da7342eaa5a987dde57bd95",
         strip_prefix = "boost-1.84.0",
-- 
2.34.1

