# copyright (c) Copyright 2024 Zenseact AB
# SPDX-License-Identifier: Apache-2.0

load("//zmbt-framework/backends/cxx/test:rules.bzl", "make_unit_tests")

GTEST_COMMON_DEPS = [
    "//zmbt-framework/backends/cxx:zmbt",
    "//zmbt-framework/backends/cxx:zmbt_main_gtest",
]

GTEST_COMMON_COPTS = [
    "-std=c++14",
    "-Werror",
    "-Wall",
    "-Wextra",
    "-Wpedantic",
    "-Wno-parentheses",  # allow `x & y | z` in tests
]

GTEST_COMMON_LINKOPTS = [
    "-lpthread",
    "-lm",
]

make_unit_tests(
    srcs = glob([
        "*.cpp"
    ], exclude = [
        "*gtest*",
        "signal_mapping_stress_test.cpp",
    ]),
)

cc_library(
    name = 'gtest_test_exe',
    srcs = ['gtest_test.cpp'],
    visibility = [':__pkg__'],
    deps = GTEST_COMMON_DEPS,
    copts = GTEST_COMMON_COPTS,
    linkopts = GTEST_COMMON_LINKOPTS,
)

cc_test(
    name = 'gtest_test',
    deps = [':gtest_test_exe'],
)

cc_test(
    name = 'gtest_multithreading_test',
    deps = [':gtest_test_exe'],
    args = [
        "--gtest_filter=RunInGtest.EnvThreadSafety",
        "--gtest_repeat=10",
        "--gtest_recreate_environments_when_repeating",
    ]
)


cc_test(
    name = 'model_output_recorder_gtest',
    srcs = ['model_output_recorder_gtest.cpp'],
    visibility = [':__pkg__'],
    deps = GTEST_COMMON_DEPS,
    copts = GTEST_COMMON_COPTS,
    linkopts = GTEST_COMMON_LINKOPTS,
)

cc_test(
    name = 'signal_mapping_stress_test',
    srcs = ['signal_mapping_stress_test.cpp'],
    visibility = [':__pkg__'],
    deps = GTEST_COMMON_DEPS,
    copts = GTEST_COMMON_COPTS + [
        "-fsanitize=address",
    ],
    linkopts = GTEST_COMMON_LINKOPTS + [
        "-static-libasan",
        "-fsanitize=address",
    ],
    args = [
        "--gtest_repeat=50",
        "--gtest_break_on_failure",
        "--gtest_recreate_environments_when_repeating",
    ]
)
