# copyright (c) Copyright 2024 Zenseact AB
# SPDX-License-Identifier: Apache-2.0

load("//zmbt-framework/backends/cxx/test:rules.bzl", "unit_test_group")

CORE_SRCS = glob([
    "core_*.cpp",
])

REFLECT_SRCS = glob([
    "reflect_*.cpp",
])

MODEL_SRCS = glob([
    "model_*.cpp",
])

MAPPING_SRCS = glob([
    "mapping_*.cpp",
])

DEMO_SRCS = glob([
    "demo_*.cpp",
])


unit_test_group(
    lib = "//zmbt-framework/backends/cxx:core",
    srcs = CORE_SRCS,
)

unit_test_group(
    lib = "//zmbt-framework/backends/cxx:reflect",
    srcs = REFLECT_SRCS,
)

unit_test_group(
    lib = "//zmbt-framework/backends/cxx:model",
    srcs = MODEL_SRCS,
)

unit_test_group(
    lib = "//zmbt-framework/backends/cxx:mapping",
    srcs = MAPPING_SRCS,
)

unit_test_group(
    lib = "//zmbt-framework/backends/cxx:zmbt",
    srcs = DEMO_SRCS,
)



cc_library(
    name = 'gtest_exe',
    srcs = ['run_in_gtest.cpp'],
    visibility = [':__pkg__'],
    deps = [
        "//zmbt-framework/backends/cxx:zmbt",
        "//zmbt-framework/backends/cxx:main_gtest",
    ],
    copts = [
        "-std=c++14",
        "-Werror",
        "-Wall",
        "-Wextra",
        "-Wpedantic",
        "-Wno-parentheses", # allow `x & y | z` in tests
    ],
    linkopts = [
        '-lpthread',
        '-lm'
    ],
)

cc_test(
    name = 'run_in_gtest',
    deps = [':gtest_exe'],
)

cc_test(
    name = 'run_in_gtest_thread_test',
    deps = [':gtest_exe'],
    args = [
        "--gtest_filter=RunInGtest.EnvThreadSafety",
        "--gtest_repeat=10",
        "--gtest_recreate_environments_when_repeating",
    ]
)


# publish sources to simplify testing on client side
filegroup(
    name = "core_test_sources",
    srcs = CORE_SRCS,
    visibility = ["//visibility:public"],
)
filegroup(
    name = "reflect_test_sources",
    srcs = REFLECT_SRCS,
    visibility = ["//visibility:public"],
)
filegroup(
    name = "model_test_sources",
    srcs = MODEL_SRCS,
    visibility = ["//visibility:public"],
)
filegroup(
    name = "mapping_test_sources",
    srcs = MAPPING_SRCS,
    visibility = ["//visibility:public"],
)
filegroup(
    name = "demo_test_sources",
    srcs = DEMO_SRCS,
    visibility = ["//visibility:public"],
)
