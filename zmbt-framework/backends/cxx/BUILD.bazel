# (c) Copyright 2024 Zenseact AB

config_setting(
    name = "debug",
    values = {
        "compilation_mode": "dbg",
    },
)

ZMBT_COPTS = select({
    ":debug": ["-g"],
    "//conditions:default": ["-O2"]
})

BOOST_LIBS = [
    "@boost//:algorithm",
    "@boost//:chrono",
    "@boost//:exception",
    "@boost//:filesystem",
    "@boost//:format",
    "@boost//:json",
    "@boost//:lambda2",
    "@boost//:pfr",
    "@boost//:program_options",
    "@boost//:regex",
    "@boost//:system",
    "@boost//:timer",
    "@boost//:callable_traits",
    "@boost//:conversion",
    "@boost//:vmd",
    "@boost//:log",
]

INTERNAL_LIB_VISIBILITY = [
    ":__pkg__",
    "//zmbt-framework/backends/cxx/test:__pkg__",
]



cc_library(
    name = "logging",
    visibility = INTERNAL_LIB_VISIBILITY,
    includes = ["include/"],
    hdrs = glob([
        "include/zmbt/logging.hpp",
    ]),
    deps = BOOST_LIBS,
    copts = ZMBT_COPTS,
)

cc_library(
    name = "core",
    visibility = INTERNAL_LIB_VISIBILITY,
    includes = ["include/"],
    hdrs = glob([
        "include/zmbt/core.hpp",
        "include/zmbt/core/*.hpp",
    ]),
    srcs = glob([
        "src/core/*.cpp",
    ]),
    deps = BOOST_LIBS,
    copts = ZMBT_COPTS,
)

cc_library(
    name = "reflect",
    visibility = INTERNAL_LIB_VISIBILITY,
    includes = ["include/"],
    hdrs = glob([
        "include/zmbt/reflect.hpp",
        "include/zmbt/reflect/*.hpp",
    ]),
    srcs = glob([
        "src/reflect/*.cpp",
    ]),
    deps = [":core"],
    copts = ZMBT_COPTS,
)

cc_library(
    name = "model",
    visibility = INTERNAL_LIB_VISIBILITY,
    includes = ["include/"],
    hdrs = glob([
        "include/zmbt/model.hpp",
        "include/zmbt/model/*.hpp",
        "include/zmbt/decor.hpp", # TODO: Move decor to a separate target
        "include/zmbt/decor/*.hpp",
    ]),
    srcs = glob([
        "src/model/*.cpp",
        "src/decor/*.cpp",
    ]),
    deps = [
        ":reflect",
        ":logging"
    ],
    copts = ZMBT_COPTS,
)


cc_library(
    name = "mapping",
    visibility = INTERNAL_LIB_VISIBILITY,
    includes = ["include/"],
    hdrs = glob([
        "include/zmbt/mapping.hpp",
        "include/zmbt/mapping/*.hpp",
    ]),
    srcs = glob([
        "src/mapping/*.cpp",
    ]),
    deps = [
        ":reflect",
        ":logging",
        ":model"
    ],
    copts = ZMBT_COPTS,
)


cc_library(
    name = "appconfig",
    visibility = INTERNAL_LIB_VISIBILITY,
    includes = ["include/"],
    hdrs = glob([
        "include/zmbt/appconfig.hpp",
        "include/zmbt/appconfig/*.hpp",
    ]),
    srcs = glob([
        "src/appconfig/*.cpp",
    ]),
    deps = [
        ":mapping",
    ],
    copts = ZMBT_COPTS,
)


cc_library(
    name = "zmbt",
    visibility = ["//visibility:public"],
    includes = ["include/"],
    hdrs = glob([
        "include/zenseact-mbt.hpp",
        "include/zmbt/all.hpp",
        "include/zmbt/api.hpp",
        "include/zmbt/api/*.hpp",
    ]),
    srcs = glob(
        [
            "src/**/*.cpp",
        ],
        exclude = [
            "src/main*.cpp"
        ],
    ),
    deps = [":appconfig"],
    copts = ZMBT_COPTS,
)


cc_library(
    name = "main_boost",
    visibility = ["//visibility:public"],
    includes = ["include/"],
    srcs = [
        "src/main_boost.cpp",
    ],
    deps = [
        ":zmbt",
        "@boost//:test.so",
    ],
    copts = ZMBT_COPTS,
)
