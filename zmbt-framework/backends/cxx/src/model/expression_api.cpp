/**
 * \file
 * \copyright (c) Copyright 2024-2025 Zenseact AB
 * \license SPDX-License-Identifier: Apache-2.0
 *
 * \details Autogenerated file - do not change!
 *
 * app: codegen.expr
 * template: codegen/expr/templates/expression_api.cpp
 *
 * How to update:
 * 1. Update the template
 * 2. Run `python -m codegen` in the project root
 * 3. Commit changes
 */


#include "zmbt/model/expression_api.hpp"

namespace zmbt {
namespace expr {

dsl::SignatureUnary<::zmbt::dsl::Keyword::Abs> const Abs = {};
dsl::SignatureUnary<::zmbt::dsl::Keyword::Acos> const Acos = {};
dsl::SignatureUnary<::zmbt::dsl::Keyword::Acosh> const Acosh = {};
dsl::SignatureBinary<::zmbt::dsl::Keyword::Add> const Add = {};
dsl::SignatureVariadic<::zmbt::dsl::Keyword::All> const All = {};
dsl::SignatureBinary<::zmbt::dsl::Keyword::And> const And = {};
dsl::SignatureVariadic<::zmbt::dsl::Keyword::Any> const Any = {};
dsl::SignatureTernary<::zmbt::dsl::Keyword::Apply> const Apply = {};
dsl::SignatureBinary<::zmbt::dsl::Keyword::Approx> const Approx = {};
dsl::SignatureBinary<::zmbt::dsl::Keyword::Approx> const Near = Approx;
dsl::SignatureBinary<::zmbt::dsl::Keyword::Argmax> const Argmax = {};
dsl::SignatureBinary<::zmbt::dsl::Keyword::Argmin> const Argmin = {};
dsl::SignatureUnary<::zmbt::dsl::Keyword::Asin> const Asin = {};
dsl::SignatureUnary<::zmbt::dsl::Keyword::Asinh> const Asinh = {};
dsl::SignatureBinary<::zmbt::dsl::Keyword::At> const At = {};
dsl::SignatureUnary<::zmbt::dsl::Keyword::Atan> const Atan = {};
dsl::SignatureUnary<::zmbt::dsl::Keyword::Atanh> const Atanh = {};
dsl::SignatureUnary<::zmbt::dsl::Keyword::Avg> const Avg = {};
dsl::SignatureBinary<::zmbt::dsl::Keyword::BitAnd> const BitAnd = {};
dsl::SignatureBinary<::zmbt::dsl::Keyword::BitLshift> const BitLshift = {};
dsl::SignatureBinary<::zmbt::dsl::Keyword::BitLshiftFrom> const BitLshiftFrom = {};
dsl::SignatureUnary<::zmbt::dsl::Keyword::BitNot> const BitNot = {};
dsl::SignatureBinary<::zmbt::dsl::Keyword::BitOr> const BitOr = {};
dsl::SignatureBinary<::zmbt::dsl::Keyword::BitRshift> const BitRshift = {};
dsl::SignatureBinary<::zmbt::dsl::Keyword::BitRshiftFrom> const BitRshiftFrom = {};
dsl::SignatureBinary<::zmbt::dsl::Keyword::BitXor> const BitXor = {};
dsl::SignatureTernary<::zmbt::dsl::Keyword::Bind> const Bind = {};
dsl::SignatureUnary<::zmbt::dsl::Keyword::Bool> const Bool = {};
dsl::SignatureUnary<::zmbt::dsl::Keyword::Card> const Card = {};
dsl::SignatureUnary<::zmbt::dsl::Keyword::Cartesian> const Cartesian = {};
dsl::SignatureUnary<::zmbt::dsl::Keyword::Ceil> const Ceil = {};
dsl::SignatureVariadic<::zmbt::dsl::Keyword::Compose> const Compose = {};
dsl::SignatureBinary<::zmbt::dsl::Keyword::Concat> const Concat = {};
dsl::SignatureUnary<::zmbt::dsl::Keyword::Cos> const Cos = {};
dsl::SignatureUnary<::zmbt::dsl::Keyword::Cosh> const Cosh = {};
dsl::SignatureBinary<::zmbt::dsl::Keyword::Count> const Count = {};
dsl::SignatureBinary<::zmbt::dsl::Keyword::Default> const Default = {};
dsl::SignatureBinary<::zmbt::dsl::Keyword::Div> const Div = {};
dsl::SignatureBinary<::zmbt::dsl::Keyword::DivFrom> const DivFrom = {};
dsl::SignatureConst<::zmbt::dsl::Keyword::E> const E = {};
dsl::SignatureConst<::zmbt::dsl::Keyword::Eps> const Eps = {};
dsl::SignatureBinary<::zmbt::dsl::Keyword::Eq> const Eq = {};
dsl::SignatureUnary<::zmbt::dsl::Keyword::Erf> const Erf = {};
dsl::SignatureUnary<::zmbt::dsl::Keyword::Erfc> const Erfc = {};
dsl::SignatureUnary<::zmbt::dsl::Keyword::Exp> const Exp = {};
dsl::SignatureConst<::zmbt::dsl::Keyword::False> const False = {};
dsl::SignatureBinary<::zmbt::dsl::Keyword::Filter> const Filter = {};
dsl::SignatureUnary<::zmbt::dsl::Keyword::Floor> const Floor = {};
dsl::SignatureBinary<::zmbt::dsl::Keyword::Format> const Format = {};
dsl::SignatureBinary<::zmbt::dsl::Keyword::Format> const Fmt = Format;
dsl::SignatureUnary<::zmbt::dsl::Keyword::Gamma> const Gamma = {};
dsl::SignatureBinary<::zmbt::dsl::Keyword::Ge> const Ge = {};
dsl::SignatureBinary<::zmbt::dsl::Keyword::Gt> const Gt = {};
dsl::SignatureUnary<::zmbt::dsl::Keyword::Id> const Id = {};
dsl::SignatureBinary<::zmbt::dsl::Keyword::In> const In = {};
dsl::SignatureConst<::zmbt::dsl::Keyword::Inf> const Inf = {};
dsl::SignatureBinary<::zmbt::dsl::Keyword::Intersect> const Intersect = {};
dsl::SignatureBinary<::zmbt::dsl::Keyword::Le> const Le = {};
dsl::SignatureVariadic<::zmbt::dsl::Keyword::List> const List = {};
dsl::SignatureBinary<::zmbt::dsl::Keyword::Log> const Log = {};
dsl::SignatureBinary<::zmbt::dsl::Keyword::LogFrom> const LogFrom = {};
dsl::SignatureBinary<::zmbt::dsl::Keyword::Lt> const Lt = {};
dsl::SignatureBinary<::zmbt::dsl::Keyword::Map> const Map = {};
dsl::SignatureBinary<::zmbt::dsl::Keyword::Max> const Max = {};
dsl::SignatureBinary<::zmbt::dsl::Keyword::Min> const Min = {};
dsl::SignatureBinary<::zmbt::dsl::Keyword::Mod> const Mod = {};
dsl::SignatureBinary<::zmbt::dsl::Keyword::ModFrom> const ModFrom = {};
dsl::SignatureBinary<::zmbt::dsl::Keyword::Mul> const Mul = {};
dsl::SignatureConst<::zmbt::dsl::Keyword::NaN> const NaN = {};
dsl::SignatureBinary<::zmbt::dsl::Keyword::Ne> const Ne = {};
dsl::SignatureUnary<::zmbt::dsl::Keyword::Neg> const Neg = {};
dsl::SignatureBinary<::zmbt::dsl::Keyword::Ni> const Ni = {};
dsl::SignatureBinary<::zmbt::dsl::Keyword::Ni> const Contains = Ni;
dsl::SignatureUnary<::zmbt::dsl::Keyword::Nil> const Nil = {};
dsl::SignatureConst<::zmbt::dsl::Keyword::Noop> const Noop = {};
dsl::SignatureConst<::zmbt::dsl::Keyword::Noop> const _ = Noop;
dsl::SignatureUnary<::zmbt::dsl::Keyword::Not> const Not = {};
dsl::SignatureBinary<::zmbt::dsl::Keyword::NotIn> const NotIn = {};
dsl::SignatureBinary<::zmbt::dsl::Keyword::NotNi> const NotNi = {};
dsl::SignatureConst<::zmbt::dsl::Keyword::Null> const Null = {};
dsl::SignatureBinary<::zmbt::dsl::Keyword::Or> const Or = {};
dsl::SignatureBinary<::zmbt::dsl::Keyword::ProperSubset> const ProperSubset = {};
dsl::SignatureBinary<::zmbt::dsl::Keyword::ProperSuperset> const ProperSuperset = {};
dsl::SignatureVariadic<::zmbt::dsl::Keyword::Pack> const Pack = {};
dsl::SignatureUnary<::zmbt::dsl::Keyword::Parse> const Parse = {};
dsl::SignatureConst<::zmbt::dsl::Keyword::Pi> const Pi = {};
dsl::SignatureBinary<::zmbt::dsl::Keyword::Pow> const Pow = {};
dsl::SignatureBinary<::zmbt::dsl::Keyword::PowFrom> const PowFrom = {};
dsl::SignatureUnary<::zmbt::dsl::Keyword::Prod> const Prod = {};
dsl::SignatureBinary<::zmbt::dsl::Keyword::Push> const Push = {};
dsl::SignatureBinary<::zmbt::dsl::Keyword::Quot> const Quot = {};
dsl::SignatureBinary<::zmbt::dsl::Keyword::QuotFrom> const QuotFrom = {};
dsl::SignatureBinary<::zmbt::dsl::Keyword::Re> const Re = {};
dsl::SignatureBinary<::zmbt::dsl::Keyword::Re> const Regex = Re;
dsl::SignatureTernary<::zmbt::dsl::Keyword::Recur> const Recur = {};
dsl::SignatureBinary<::zmbt::dsl::Keyword::Reduce> const Reduce = {};
dsl::SignatureBinary<::zmbt::dsl::Keyword::Repeat> const Repeat = {};
dsl::SignatureUnary<::zmbt::dsl::Keyword::Reverse> const Reverse = {};
dsl::SignatureBinary<::zmbt::dsl::Keyword::Round> const Round = {};
dsl::SignatureVariadic<::zmbt::dsl::Keyword::Saturate> const Saturate = {};
dsl::SignatureUnary<::zmbt::dsl::Keyword::Serialize> const Serialize = {};
dsl::SignatureUnary<::zmbt::dsl::Keyword::Serialize> const Str = Serialize;
dsl::SignatureBinary<::zmbt::dsl::Keyword::Diff> const Diff = {};
dsl::SignatureBinary<::zmbt::dsl::Keyword::DiffFrom> const DiffFrom = {};
dsl::SignatureBinary<::zmbt::dsl::Keyword::SetEq> const SetEq = {};
dsl::SignatureUnary<::zmbt::dsl::Keyword::Sign> const Sign = {};
dsl::SignatureUnary<::zmbt::dsl::Keyword::Sin> const Sin = {};
dsl::SignatureUnary<::zmbt::dsl::Keyword::Sinh> const Sinh = {};
dsl::SignatureUnary<::zmbt::dsl::Keyword::Size> const Size = {};
dsl::SignatureBinary<::zmbt::dsl::Keyword::Slide> const Slide = {};
dsl::SignatureBinary<::zmbt::dsl::Keyword::Sort> const Sort = {};
dsl::SignatureUnary<::zmbt::dsl::Keyword::Sqrt> const Sqrt = {};
dsl::SignatureBinary<::zmbt::dsl::Keyword::Stride> const Stride = {};
dsl::SignatureBinary<::zmbt::dsl::Keyword::Sub> const Sub = {};
dsl::SignatureBinary<::zmbt::dsl::Keyword::SubFrom> const SubFrom = {};
dsl::SignatureBinary<::zmbt::dsl::Keyword::Subset> const Subset = {};
dsl::SignatureUnary<::zmbt::dsl::Keyword::Sum> const Sum = {};
dsl::SignatureBinary<::zmbt::dsl::Keyword::Superset> const Superset = {};
dsl::SignatureUnary<::zmbt::dsl::Keyword::Tan> const Tan = {};
dsl::SignatureUnary<::zmbt::dsl::Keyword::Tanh> const Tanh = {};
dsl::SignatureUnary<::zmbt::dsl::Keyword::Transp> const Transp = {};
dsl::SignatureConst<::zmbt::dsl::Keyword::True> const True = {};
dsl::SignatureBinary<::zmbt::dsl::Keyword::Try> const Try = {};
dsl::SignatureBinary<::zmbt::dsl::Keyword::TryCatch> const TryCatch = {};
dsl::SignatureBinary<::zmbt::dsl::Keyword::Union> const Union = {};
dsl::SignatureUnary<::zmbt::dsl::Keyword::Uniques> const Uniques = {};

} // namespace expr
} // namespace zmbt
