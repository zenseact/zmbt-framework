/**
 * \file
 * \copyright (c) Copyright 2024-2025 Zenseact AB
 * \license SPDX-License-Identifier: Apache-2.0
 *
 * \details Autogenerated file - do not change!
 *
 * app: codegen.expr
 * template: codegen/expr/templates/zmbt-framework/backends/cxx/src/expr/api.cpp
 *
 * How to update:
 * 1. Update the template
 * 2. Run `python -m codegen` in the project root
 * 3. Commit changes
 */


#include "zmbt/expr/api.hpp"

namespace zmbt {
namespace expr {

lang::SignatureConst<::zmbt::lang::Keyword::Noop> const Noop = {};
lang::SignatureConst<::zmbt::lang::Keyword::Noop> const _ = Noop;
lang::SignatureConst<::zmbt::lang::Keyword::Null> const Null = {};
lang::SignatureConst<::zmbt::lang::Keyword::True> const True = {};
lang::SignatureConst<::zmbt::lang::Keyword::False> const False = {};
lang::SignatureConst<::zmbt::lang::Keyword::Pi> const Pi = {};
lang::SignatureConst<::zmbt::lang::Keyword::E> const E = {};
lang::SignatureConst<::zmbt::lang::Keyword::Inf> const Inf = {};
lang::SignatureConst<::zmbt::lang::Keyword::Eps> const Eps = {};
lang::SignatureConst<::zmbt::lang::Keyword::NaN> const NaN = {};
lang::SignatureConst<::zmbt::lang::Keyword::Thread> const Thread = {};
lang::SignatureUnary<::zmbt::lang::Keyword::Sin> const Sin = {};
lang::SignatureUnary<::zmbt::lang::Keyword::Cos> const Cos = {};
lang::SignatureUnary<::zmbt::lang::Keyword::Tan> const Tan = {};
lang::SignatureUnary<::zmbt::lang::Keyword::Asin> const Asin = {};
lang::SignatureUnary<::zmbt::lang::Keyword::Acos> const Acos = {};
lang::SignatureUnary<::zmbt::lang::Keyword::Atan> const Atan = {};
lang::SignatureUnary<::zmbt::lang::Keyword::Sinh> const Sinh = {};
lang::SignatureUnary<::zmbt::lang::Keyword::Cosh> const Cosh = {};
lang::SignatureUnary<::zmbt::lang::Keyword::Tanh> const Tanh = {};
lang::SignatureUnary<::zmbt::lang::Keyword::Asinh> const Asinh = {};
lang::SignatureUnary<::zmbt::lang::Keyword::Acosh> const Acosh = {};
lang::SignatureUnary<::zmbt::lang::Keyword::Atanh> const Atanh = {};
lang::SignatureUnary<::zmbt::lang::Keyword::Exp> const Exp = {};
lang::SignatureUnary<::zmbt::lang::Keyword::Erf> const Erf = {};
lang::SignatureUnary<::zmbt::lang::Keyword::Erfc> const Erfc = {};
lang::SignatureUnary<::zmbt::lang::Keyword::Gamma> const Gamma = {};
lang::SignatureUnary<::zmbt::lang::Keyword::Abs> const Abs = {};
lang::SignatureUnary<::zmbt::lang::Keyword::Ceil> const Ceil = {};
lang::SignatureUnary<::zmbt::lang::Keyword::Floor> const Floor = {};
lang::SignatureUnary<::zmbt::lang::Keyword::Round> const Round = {};
lang::SignatureUnary<::zmbt::lang::Keyword::Sqrt> const Sqrt = {};
lang::SignatureUnary<::zmbt::lang::Keyword::Sign> const Sign = {};
lang::SignatureUnary<::zmbt::lang::Keyword::Neg> const Neg = {};
lang::SignatureBinary<::zmbt::lang::Keyword::Add> const Add = {};
lang::SignatureBinary<::zmbt::lang::Keyword::Sub> const Sub = {};
lang::SignatureBinary<::zmbt::lang::Keyword::Mul> const Mul = {};
lang::SignatureBinary<::zmbt::lang::Keyword::Div> const Div = {};
lang::SignatureBinary<::zmbt::lang::Keyword::Pow> const Pow = {};
lang::SignatureBinary<::zmbt::lang::Keyword::Log> const Log = {};
lang::SignatureBinary<::zmbt::lang::Keyword::Mod> const Mod = {};
lang::SignatureBinary<::zmbt::lang::Keyword::Quot> const Quot = {};
lang::SignatureUnary<::zmbt::lang::Keyword::BitNot> const BitNot = {};
lang::SignatureBinary<::zmbt::lang::Keyword::BitAnd> const BitAnd = {};
lang::SignatureBinary<::zmbt::lang::Keyword::BitOr> const BitOr = {};
lang::SignatureBinary<::zmbt::lang::Keyword::BitXor> const BitXor = {};
lang::SignatureBinary<::zmbt::lang::Keyword::Lshift> const Lshift = {};
lang::SignatureBinary<::zmbt::lang::Keyword::Rshift> const Rshift = {};
lang::SignatureBinary<::zmbt::lang::Keyword::Eq> const Eq = {};
lang::SignatureBinary<::zmbt::lang::Keyword::Ne> const Ne = {};
lang::SignatureBinary<::zmbt::lang::Keyword::Lt> const Lt = {};
lang::SignatureBinary<::zmbt::lang::Keyword::Le> const Le = {};
lang::SignatureBinary<::zmbt::lang::Keyword::Gt> const Gt = {};
lang::SignatureBinary<::zmbt::lang::Keyword::Ge> const Ge = {};
lang::SignatureBinary<::zmbt::lang::Keyword::Near> const Near = {};
lang::SignatureBinary<::zmbt::lang::Keyword::Near> const Approx = Near;
lang::SignatureBinary<::zmbt::lang::Keyword::Union> const Union = {};
lang::SignatureBinary<::zmbt::lang::Keyword::Intersect> const Intersect = {};
lang::SignatureBinary<::zmbt::lang::Keyword::Diff> const Diff = {};
lang::SignatureBinary<::zmbt::lang::Keyword::SetEq> const SetEq = {};
lang::SignatureBinary<::zmbt::lang::Keyword::Subset> const Subset = {};
lang::SignatureBinary<::zmbt::lang::Keyword::Superset> const Superset = {};
lang::SignatureBinary<::zmbt::lang::Keyword::PSubset> const PSubset = {};
lang::SignatureBinary<::zmbt::lang::Keyword::PSuperset> const PSuperset = {};
lang::SignatureBinary<::zmbt::lang::Keyword::In> const In = {};
lang::SignatureBinary<::zmbt::lang::Keyword::NotIn> const NotIn = {};
lang::SignatureBinary<::zmbt::lang::Keyword::Ni> const Ni = {};
lang::SignatureBinary<::zmbt::lang::Keyword::Ni> const Contains = Ni;
lang::SignatureBinary<::zmbt::lang::Keyword::NotNi> const NotNi = {};
lang::SignatureUnary<::zmbt::lang::Keyword::Bool> const Bool = {};
lang::SignatureUnary<::zmbt::lang::Keyword::Bool> const Truthy = Bool;
lang::SignatureUnary<::zmbt::lang::Keyword::Not> const Not = {};
lang::SignatureUnary<::zmbt::lang::Keyword::Not> const Falsy = Not;
lang::SignatureUnary<::zmbt::lang::Keyword::Not> const Nil = Not;
lang::SignatureBinary<::zmbt::lang::Keyword::And> const And = {};
lang::SignatureBinary<::zmbt::lang::Keyword::Or> const Or = {};
lang::SignatureUnary<::zmbt::lang::Keyword::Id> const Id = {};
lang::SignatureUnary<::zmbt::lang::Keyword::Transp> const Transp = {};
lang::SignatureUnary<::zmbt::lang::Keyword::Cartesian> const Cartesian = {};
lang::SignatureUnary<::zmbt::lang::Keyword::Reverse> const Reverse = {};
lang::SignatureUnary<::zmbt::lang::Keyword::Uniques> const Uniques = {};
lang::SignatureUnary<::zmbt::lang::Keyword::Items> const Items = {};
lang::SignatureUnary<::zmbt::lang::Keyword::Keys> const Keys = {};
lang::SignatureUnary<::zmbt::lang::Keyword::Values> const Values = {};
lang::SignatureUnary<::zmbt::lang::Keyword::Enumerate> const Enumerate = {};
lang::SignatureUnary<::zmbt::lang::Keyword::Flatten> const Flatten = {};
lang::SignatureUnary<::zmbt::lang::Keyword::ToList> const ToList = {};
lang::SignatureUnary<::zmbt::lang::Keyword::Arange> const Arange = {};
lang::SignatureUnary<::zmbt::lang::Keyword::Parse> const Parse = {};
lang::SignatureUnary<::zmbt::lang::Keyword::Str> const Str = {};
lang::SignatureUnary<::zmbt::lang::Keyword::Str> const Serialize = Str;
lang::SignatureBinary<::zmbt::lang::Keyword::Re> const Re = {};
lang::SignatureBinary<::zmbt::lang::Keyword::Re> const Regex = Re;
lang::SignatureVariadic<::zmbt::lang::Keyword::Fmt> const Fmt = {};
lang::SignatureVariadic<::zmbt::lang::Keyword::Fmt> const Format = Fmt;
lang::SignatureUnary<::zmbt::lang::Keyword::Card> const Card = {};
lang::SignatureUnary<::zmbt::lang::Keyword::Size> const Size = {};
lang::SignatureUnary<::zmbt::lang::Keyword::Sum> const Sum = {};
lang::SignatureUnary<::zmbt::lang::Keyword::Prod> const Prod = {};
lang::SignatureUnary<::zmbt::lang::Keyword::Avg> const Avg = {};
lang::SignatureBinary<::zmbt::lang::Keyword::Slide> const Slide = {};
lang::SignatureBinary<::zmbt::lang::Keyword::Stride> const Stride = {};
lang::SignatureBinary<::zmbt::lang::Keyword::Chunks> const Chunks = {};
lang::SignatureBinary<::zmbt::lang::Keyword::Repeat> const Repeat = {};
lang::SignatureBinary<::zmbt::lang::Keyword::Cat> const Cat = {};
lang::SignatureBinary<::zmbt::lang::Keyword::Cat> const Concat = Cat;
lang::SignatureBinary<::zmbt::lang::Keyword::Push> const Push = {};
lang::SignatureBinary<::zmbt::lang::Keyword::At> const At = {};
lang::SignatureBinary<::zmbt::lang::Keyword::Del> const Del = {};
lang::SignatureBinary<::zmbt::lang::Keyword::Del> const Delete = Del;
lang::SignatureBinary<::zmbt::lang::Keyword::Lookup> const Lookup = {};
lang::SignatureCast const Cast = {};
lang::SignatureCast const Decorate = Cast;
lang::SignatureUncast const Uncast = {};
lang::SignatureUncast const Undecorate = Uncast;
lang::SignatureBinary<::zmbt::lang::Keyword::Fold> const Fold = {};
lang::SignatureBinary<::zmbt::lang::Keyword::Fold> const Reduce = Fold;
lang::SignatureBinary<::zmbt::lang::Keyword::Map> const Map = {};
lang::SignatureBinary<::zmbt::lang::Keyword::Filter> const Filter = {};
lang::SignatureBinary<::zmbt::lang::Keyword::Count> const Count = {};
lang::SignatureBinary<::zmbt::lang::Keyword::Each> const Each = {};
lang::SignatureBinary<::zmbt::lang::Keyword::Sort> const Sort = {};
lang::SignatureBinary<::zmbt::lang::Keyword::Find> const Find = {};
lang::SignatureBinary<::zmbt::lang::Keyword::FindPtr> const FindPtr = {};
lang::SignatureBinary<::zmbt::lang::Keyword::FindIdx> const FindIdx = {};
lang::SignatureBinary<::zmbt::lang::Keyword::Min> const Min = {};
lang::SignatureBinary<::zmbt::lang::Keyword::Max> const Max = {};
lang::SignatureBinary<::zmbt::lang::Keyword::Argmin> const Argmin = {};
lang::SignatureBinary<::zmbt::lang::Keyword::Argmax> const Argmax = {};
lang::SignatureBinary<::zmbt::lang::Keyword::Recur> const Recur = {};
lang::SignatureBinary<::zmbt::lang::Keyword::Unfold> const Unfold = {};
lang::SignatureOp const Op = {};
lang::SignatureOp const Overload = Op;
lang::SignatureBinary<::zmbt::lang::Keyword::Bind> const Bind = {};
lang::SignatureVariadic<::zmbt::lang::Keyword::Any> const Any = {};
lang::SignatureVariadic<::zmbt::lang::Keyword::All> const All = {};
lang::SignatureVariadic<::zmbt::lang::Keyword::Saturate> const Saturate = {};
lang::SignatureVariadic<::zmbt::lang::Keyword::Pipe> const Pipe = {};
lang::SignatureVariadic<::zmbt::lang::Keyword::Tuple> const Tuple = {};
lang::SignatureVariadic<::zmbt::lang::Keyword::Fork> const Fork = {};
lang::SignatureBinary<::zmbt::lang::Keyword::Flip> const Flip = {};
lang::SignatureBinary<::zmbt::lang::Keyword::Dbg> const Dbg = {};
lang::SignatureBinary<::zmbt::lang::Keyword::Dbg> const Debug = Dbg;
lang::SignatureBinary<::zmbt::lang::Keyword::Eval> const Eval = {};
lang::SignatureBinary<::zmbt::lang::Keyword::Try> const Try = {};
lang::SignatureUnary<::zmbt::lang::Keyword::Kwrd> const Kwrd = {};
lang::SignatureUnary<::zmbt::lang::Keyword::Prms> const Prms = {};
lang::SignatureUnary<::zmbt::lang::Keyword::Prms> const Parameters = Prms;
lang::SignatureBinary<::zmbt::lang::Keyword::Q> const Q = {};
lang::SignatureBinary<::zmbt::lang::Keyword::Q> const C = Q;
lang::SignatureBinary<::zmbt::lang::Keyword::Q> const Const = Q;
lang::SignatureBinary<::zmbt::lang::Keyword::D> const D = {};
lang::SignatureBinary<::zmbt::lang::Keyword::D> const Default = D;
lang::SignatureErr const Err = {};
lang::SignatureErr const Error = Err;
lang::SignatureBinary<::zmbt::lang::Keyword::Trace> const Trace = {};
lang::SignatureBinary<::zmbt::lang::Keyword::PreProc> const PreProc = {};

} // namespace expr
} // namespace zmbt
