/**
 * \file
 * \copyright (c) Copyright 2024-2025 Zenseact AB
 * \license SPDX-License-Identifier: Apache-2.0
 *
 * \details Autogenerated file - do not change!
 *
 * app: codegen.expr
 * template: codegen/expr/templates/zmbt-framework/backends/cxx/src/expr/keyword_is_binary.cpp
 *
 * How to update:
 * 1. Update the template
 * 2. Run `python -m codegen` in the project root
 * 3. Commit changes
 */

#include "zmbt/expr/keyword.hpp"


namespace zmbt {
namespace lang {
namespace detail {

bool isBinary(Keyword const& k)
{
    switch (k)
    {
    case Keyword::Add:
    case Keyword::Sub:
    case Keyword::Mul:
    case Keyword::Div:
    case Keyword::Pow:
    case Keyword::Log:
    case Keyword::Mod:
    case Keyword::Quot:
    case Keyword::BitAnd:
    case Keyword::BitOr:
    case Keyword::BitXor:
    case Keyword::Lshift:
    case Keyword::Rshift:
    case Keyword::Eq:
    case Keyword::Ne:
    case Keyword::Lt:
    case Keyword::Le:
    case Keyword::Gt:
    case Keyword::Ge:
    case Keyword::Near:
    case Keyword::Union:
    case Keyword::Intersect:
    case Keyword::Diff:
    case Keyword::SetEq:
    case Keyword::Subset:
    case Keyword::Superset:
    case Keyword::PSubset:
    case Keyword::PSuperset:
    case Keyword::In:
    case Keyword::NotIn:
    case Keyword::Ni:
    case Keyword::NotNi:
    case Keyword::And:
    case Keyword::Or:
    case Keyword::Re:
    case Keyword::Fmt:
    case Keyword::Slide:
    case Keyword::Stride:
    case Keyword::Chunks:
    case Keyword::Repeat:
    case Keyword::Cat:
    case Keyword::Push:
    case Keyword::At:
    case Keyword::Del:
    case Keyword::Lookup:
    case Keyword::Q:
    case Keyword::Cast:
    case Keyword::Uncast:
    case Keyword::Fold:
    case Keyword::Map:
    case Keyword::Filter:
    case Keyword::Count:
    case Keyword::Each:
    case Keyword::Sort:
    case Keyword::Find:
    case Keyword::FindPtr:
    case Keyword::FindIdx:
    case Keyword::Min:
    case Keyword::Max:
    case Keyword::Argmin:
    case Keyword::Argmax:
    case Keyword::Flip:
    case Keyword::Eval:
    case Keyword::Try:
    case Keyword::TryCatch:
    case Keyword::D:
        return true;
    default:
        return false;
    }
}

} // namespace detail
} // namespace lang
} // namespace zmbt
