/**
 * \file
 * \copyright (c) Copyright 2024-2025 Zenseact AB
 * \license SPDX-License-Identifier: Apache-2.0
 *
 * \details Autogenerated file - do not change!
 *
 * app: codegen.expr
 * template: codegen/expr/templates/zmbt-framework/backends/cxx/src/expr/expr_eval_switch.cpp
 *
 * How to update:
 * 1. Update the template
 * 2. Run `python -m codegen` in the project root
 * 3. Commit changes
 */


#include "zmbt/expr/expression.hpp"
#include "zmbt/expr/eval_impl.hpp"
#include "zmbt/expr/eval_impl_pp.hpp"


namespace zmbt {
namespace lang {
template <>
struct EvalValidator<Keyword::Add>
{
    EvalValidator(Expression const& lhs, Expression const& rhs)
    {
        ZMBT_LOG_CERR(INFO) << BOOST_CURRENT_FUNCTION << ": \n  "
            << lhs << " @ " << rhs;
    }

    bool is_invalid() const
    {
        return false;
    }

    Expression status() const
    {
        return {nullptr};
    }
};


ZMBT_DEFINE_EVALUATE_IMPL(Add)
{
    ZMBT_LOG_CERR(INFO) << BOOST_CURRENT_FUNCTION << ": "
    << "\n  self: " << self()
    << "\n  lhs : " << lhs()
    << "\n  rhs : " << rhs()
    ;
    return context.op.apply(Keyword::Add, lhs(), rhs());
}



} // namespace expr
} // namespace zmbt
