/**
 * \file
 * \copyright (c) Copyright 2024-2025 Zenseact AB
 * \license SPDX-License-Identifier: Apache-2.0
 *
 * \details Autogenerated file - do not change!
 *
 * app: codegen.expr
 * template: codegen/mdm/templates/model_definition.hpp
 *
 * How to update:
 * 1. Update the template
 * 2. Run `python -m codegen` in the project root
 * 3. Commit changes
 */


#ifndef ZMBT_MAPPING_MODEL_DEFINITION_HPP_
#define ZMBT_MAPPING_MODEL_DEFINITION_HPP_

#include "model_definition_helper.hpp"



namespace zmbt {
namespace mapping {

/// Mapping model definition machine
class ModelDefinition
{


    /// Base node class
    class BaseTransition;

    friend class SignalMapping;

    struct N_Term;

    // Transition templates
    /// T_Alias transition
    template <class Target>
    struct T_Alias;
    /// T_As transition
    template <class Target>
    struct T_As;
    /// T_At transition
    template <class Target>
    struct T_At;
    /// T_ContinuePipe transition
    template <class Target>
    struct T_ContinuePipe;
    /// T_CustomParam transition
    template <class Target>
    struct T_CustomParam;
    /// T_Description transition
    template <class Target>
    struct T_Description;
    /// T_Filter transition
    template <class Target>
    struct T_Filter;
    /// T_OnTrigger transition
    template <class Target>
    struct T_OnTrigger;
    /// T_Param transition
    template <class Target>
    struct T_Param;
    /// T_ParamRow transition
    template <class Target>
    struct T_ParamRow;
    /// T_PostRun transition
    template <class Target>
    struct T_PostRun;
    /// T_PreRun transition
    template <class Target>
    struct T_PreRun;
    /// T_Repeat transition
    template <class Target>
    struct T_Repeat;
    /// T_Take transition
    template <class Target>
    struct T_Take;
    /// T_TerminatePipe transition
    template <class Target>
    struct T_TerminatePipe;
    /// T_Test transition
    template <class Target>
    struct T_Test;
    /// T_TestRow transition
    template <class Target>
    struct T_TestRow;

// NODES forward declarations
    /// N_Descr node
    class N_Descr;
    /// N_Post node
    class N_Post;
    /// N_Pre node
    class N_Pre;
    /// N_Param node
    class N_Param;
    /// N_ParamTable node
    class N_ParamTable;
    /// N_Test node
    class N_Test;
    /// N_TestTable node
    class N_TestTable;
    /// N_Channel node
    class N_Channel;
    /// N_MaybeChannel node
    class N_MaybeChannel;
    /// N_ChannelEnd node
    class N_ChannelEnd;
    /// N_Decor node
    class N_Decor;
    /// N_Alias node
    class N_Alias;
    /// N_Via node
    class N_Via;
    /// N_Filter node
    class N_Filter;
    /// N_Repeat node
    class N_Repeat;
    /// N_Main node
    class N_Main;

};


}  // namespace mapping
}  // namespace zmbt

#endif
