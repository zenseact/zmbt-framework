/**
 * \file
 * \copyright (c) Copyright 2024-2025 Zenseact AB
 * \license SPDX-License-Identifier: Apache-2.0
 *
 * \details Autogenerated file - do not change!
 *
 * app: codegen.expr
 * template: codegen/mdm/templates/model_definition.hpp
 *
 * How to update:
 * 1. Update the template
 * 2. Run `python -m codegen` in the project root
 * 3. Commit changes
 */


#ifndef ZMBT_MAPPING_MODEL_DEFINITION_HPP_
#define ZMBT_MAPPING_MODEL_DEFINITION_HPP_

#include "model_definition_helper.hpp"



namespace zmbt {
namespace mapping {

/// Mapping model definition machine
class ModelDefinition
{


    /// Base node class
    class BaseTransition;

    friend class SignalMapping;

    struct N_Term;

    // Transition templates
    /// T_Alias transition
    template <class Target>
    struct T_Alias;
    /// T_As transition
    template <class Target>
    struct T_As;
    /// T_CallCount transition
    template <class Target>
    struct T_CallCount;
    /// T_CallFilter transition
    template <class Target>
    struct T_CallFilter;
    /// T_Description transition
    template <class Target>
    struct T_Description;
    /// T_Expect transition
    template <class Target>
    struct T_Expect;
    /// T_InjectTo transition
    template <class Target>
    struct T_InjectTo;
    /// T_Keep transition
    template <class Target>
    struct T_Keep;
    /// T_ObserveOn transition
    template <class Target>
    struct T_ObserveOn;
    /// T_OnTrigger transition
    template <class Target>
    struct T_OnTrigger;
    /// T_Pairwise transition
    template <class Target>
    struct T_Pairwise;
    /// T_ParamRow transition
    template <class Target>
    struct T_ParamRow;
    /// T_Parametrize transition
    template <class Target>
    struct T_Parametrize;
    /// T_PostRun transition
    template <class Target>
    struct T_PostRun;
    /// T_PreRun transition
    template <class Target>
    struct T_PreRun;
    /// T_Prod transition
    template <class Target>
    struct T_Prod;
    /// T_Repeat transition
    template <class Target>
    struct T_Repeat;
    /// T_SignalFilter transition
    template <class Target>
    struct T_SignalFilter;
    /// T_SignalProperty transition
    template <class Target>
    struct T_SignalProperty;
    /// T_Test transition
    template <class Target>
    struct T_Test;
    /// T_TestComment transition
    template <class Target>
    struct T_TestComment;
    /// T_TestRow transition
    template <class Target>
    struct T_TestRow;
    /// T_Union transition
    template <class Target>
    struct T_Union;
    /// T_With transition
    template <class Target>
    struct T_With;
    /// T_Zip transition
    template <class Target>
    struct T_Zip;

// NODES forward declarations
    /// N_Descr node
    class N_Descr;
    /// N_Post node
    class N_Post;
    /// N_Pre node
    class N_Pre;
    /// N_ParamTable node
    class N_ParamTable;
    /// N_Param node
    class N_Param;
    /// N_TestTable node
    class N_TestTable;
    /// N_Test node
    class N_Test;
    /// N_Channel node
    class N_Channel;
    /// N_ChannelOut node
    class N_ChannelOut;
    /// N_CombineOut node
    class N_CombineOut;
    /// N_EndIn node
    class N_EndIn;
    /// N_EndOut node
    class N_EndOut;
    /// N_AliasIn node
    class N_AliasIn;
    /// N_AliasOut node
    class N_AliasOut;
    /// N_CallFilter node
    class N_CallFilter;
    /// N_DecorIn node
    class N_DecorIn;
    /// N_DecorOut node
    class N_DecorOut;
    /// N_KindIn node
    class N_KindIn;
    /// N_KindOut node
    class N_KindOut;
    /// N_Repeat node
    class N_Repeat;
    /// N_Main node
    class N_Main;

};


}  // namespace mapping
}  // namespace zmbt

#endif
