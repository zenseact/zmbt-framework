@require(data)
/**
 * \file
 * \copyright (c) Copyright 2024-2025 Zenseact AB
 * \license SPDX-License-Identifier: Apache-2.0
 *
 * \details Autogenerated file - do not change!
 *
 * app: @appname
 * template: @template
 *
 * How to update:
 * 1. Update the template
 * 2. Run `python -m codegen` in the project root
 * 3. Commit changes
 */

@for library in data.imports_for(data.CodegenFns):
#include <@library>
@end

#include "zmbt/model/signal_operator_handler.hpp"
#include "zmbt/model/expression.hpp"


namespace zmbt {

boost::json::value zmbt::Expression::eval_CodegenFn(boost::json::value const& x, SignalOperatorHandler const&) const
{
    switch(keyword())
    {
@for keyword in data.CodegenFns:
    case Keyword::@keyword.Enum: return @keyword.CodegenValue;
@end
    default:
        throw expression_error("got invalid unary math expression: %s", underlying());
        return nullptr;
    }
}

} // namespace zmbt

