name: Test and Scan Backends

on:
  push:
    tags: [ "*" ]
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]

jobs:
  setup-cxx:
    runs-on: ubuntu-latest
    steps:
      - name: Install tools
        shell: bash
        run: |
          sudo apt install unzip zip wget gcc

      - name: Install Bazel
        shell: bash
        run: |
          wget https://github.com/bazelbuild/bazel/releases/download/7.4.1/bazel-7.4.1-installer-linux-x86_64.sh
          chmod +x bazel-7.4.1-installer-linux-x86_64.sh
          ./bazel-7.4.1-installer-linux-x86_64.sh --user
          export PATH="$PATH:$HOME/bin"
          bazel --version

      - name: Install Clang-17
        shell: bash
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod u+x llvm.sh
          sudo ./llvm.sh 17
          clang-17 --version


  test-and-scan-backends:
    needs: setup-cxx
    name: Build and test backends/${{ matrix.backend }} with ${{ matrix.compiler }}
    runs-on: ubuntu-latest
    permissions:
      checks: write
      pull-requests: write
      security-events: write
      packages: read
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        include:
        - backend: cxx
          language: c-cpp
          compiler: gcc
        - backend: cxx
          language: c-cpp
          compiler: clang-17

    env:
      CC: /usr/bin/${{ matrix.compiler }}
    steps:

      - name: Checkout code
        uses: actions/checkout@v4

      - if: matrix.backend == 'cxx' && matrix.compiler == 'gcc'
        name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          build-mode: manual

      - if: matrix.language == 'c-cpp'
        name: Run all tests
        shell: bash
        run: |
            bazel --output_user_root=/tmp/build_output test //zmbt-framework/backends/${{ matrix.backend }}/...

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results-backends-${{ matrix.backend }}-${{ matrix.compiler }}
          path: bazel-testlogs/zmbt-framework/backends/${{ matrix.backend }}/test/**/*.xml

      - name: Upload test logs
        uses: actions/upload-artifact@v4
        with:
          name: test-logs-backends-${{ matrix.backend }}-${{ matrix.compiler }}
          path: bazel-testlogs/zmbt-framework/backends/${{ matrix.backend }}/test/**/*.log

      - if: matrix.backend == 'cxx' && matrix.compiler == 'gcc'
        name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"

  publish-test-results:
    needs: test-and-scan-backends
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: test-results-backends-cxx-clang-17
          path: cxx-clang-17
      - uses: actions/download-artifact@v4
        with:
          name: test-results-backends-cxx-gcc
          path: cxx-gcc
      - name: List downloaded files
        run: ls -R
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          action_fail_on_inconclusive: true
          junit_files: |
            cxx-clang-17/**/*.xml
            cxx-gcc/**/*.xml
