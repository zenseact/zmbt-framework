<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="structzmbt_1_1decor_1_1underlying" kind="struct" language="C++" prot="public">
    <compoundname>zmbt::decor::underlying</compoundname>
    <templateparamlist>
      <param>
        <type>class E</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structzmbt_1_1decor_1_1underlying_1aff72876901d6f787d9e7c89e01816cf2" prot="public" static="no">
        <type>std::underlying_type_t&lt; E &gt;</type>
        <definition>using zmbt::decor::underlying&lt; E &gt;::decorated_type =  std::underlying_type_t&lt;E&gt;</definition>
        <argsstring></argsstring>
        <name>decorated_type</name>
        <qualifiedname>zmbt::decor::underlying::decorated_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" line="27" column="5" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" bodystart="27" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structzmbt_1_1decor_1_1underlying_1a193c4acfb7fafb09e91c064987f00fa4" prot="private" static="no" mutable="no">
        <type>decorated_type</type>
        <definition>decorated_type zmbt::decor::underlying&lt; E &gt;::value_</definition>
        <argsstring></argsstring>
        <name>value_</name>
        <qualifiedname>zmbt::decor::underlying::value_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" line="88" column="20" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" bodystart="88" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structzmbt_1_1decor_1_1underlying_1ad8185353099d70c36ff99dc1a8c06175" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>zmbt::decor::underlying&lt; E &gt;::~underlying</definition>
        <argsstring>()=default</argsstring>
        <name>~underlying</name>
        <qualifiedname>zmbt::decor::underlying::~underlying</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" line="30" column="5"/>
      </memberdef>
      <memberdef kind="function" id="structzmbt_1_1decor_1_1underlying_1a2688612103f39970614621689e6b4de8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>zmbt::decor::underlying&lt; E &gt;::underlying</definition>
        <argsstring>()=default</argsstring>
        <name>underlying</name>
        <qualifiedname>zmbt::decor::underlying::underlying</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" line="31" column="5"/>
      </memberdef>
      <memberdef kind="function" id="structzmbt_1_1decor_1_1underlying_1afb4121f7c2c05a60a2311ea9057d0f58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>zmbt::decor::underlying&lt; E &gt;::underlying</definition>
        <argsstring>(underlying const &amp;)=default</argsstring>
        <name>underlying</name>
        <qualifiedname>zmbt::decor::underlying::underlying</qualifiedname>
        <param>
          <type><ref refid="structzmbt_1_1decor_1_1underlying" kindref="compound">underlying</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" line="32" column="5"/>
      </memberdef>
      <memberdef kind="function" id="structzmbt_1_1decor_1_1underlying_1acf328a4656fcb0a63fb392a021e9168e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>zmbt::decor::underlying&lt; E &gt;::underlying</definition>
        <argsstring>(underlying &amp;&amp;)=default</argsstring>
        <name>underlying</name>
        <qualifiedname>zmbt::decor::underlying::underlying</qualifiedname>
        <param>
          <type><ref refid="structzmbt_1_1decor_1_1underlying" kindref="compound">underlying</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" line="33" column="5"/>
      </memberdef>
      <memberdef kind="function" id="structzmbt_1_1decor_1_1underlying_1a5247a480f22c8ab1efa60f9c1ce0b544" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structzmbt_1_1decor_1_1underlying" kindref="compound">underlying</ref> &amp;</type>
        <definition>underlying &amp; zmbt::decor::underlying&lt; E &gt;::operator=</definition>
        <argsstring>(underlying const &amp;)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>zmbt::decor::underlying::operator=</qualifiedname>
        <param>
          <type><ref refid="structzmbt_1_1decor_1_1underlying" kindref="compound">underlying</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" line="34" column="16"/>
      </memberdef>
      <memberdef kind="function" id="structzmbt_1_1decor_1_1underlying_1a1c89c6a60d6be58ce186ff054ff9b1e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structzmbt_1_1decor_1_1underlying" kindref="compound">underlying</ref> &amp;</type>
        <definition>underlying &amp; zmbt::decor::underlying&lt; E &gt;::operator=</definition>
        <argsstring>(underlying &amp;&amp;)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>zmbt::decor::underlying::operator=</qualifiedname>
        <param>
          <type><ref refid="structzmbt_1_1decor_1_1underlying" kindref="compound">underlying</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" line="35" column="16"/>
      </memberdef>
      <memberdef kind="function" id="structzmbt_1_1decor_1_1underlying_1af55816983731da12e265ab04b1255463" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>zmbt::decor::underlying&lt; E &gt;::underlying</definition>
        <argsstring>(decorated_type const v)</argsstring>
        <name>underlying</name>
        <qualifiedname>zmbt::decor::underlying::underlying</qualifiedname>
        <param>
          <type>decorated_type const</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" line="38" column="5" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" bodystart="38" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="structzmbt_1_1decor_1_1underlying_1a734ebb34f06048ecc74902dd21031407" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structzmbt_1_1decor_1_1underlying" kindref="compound">underlying</ref> &amp;</type>
        <definition>underlying &amp; zmbt::decor::underlying&lt; E &gt;::operator=</definition>
        <argsstring>(decorated_type const v)</argsstring>
        <name>operator=</name>
        <qualifiedname>zmbt::decor::underlying::operator=</qualifiedname>
        <param>
          <type>decorated_type const</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" line="39" column="16" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" bodystart="39" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="structzmbt_1_1decor_1_1underlying_1a3fb0d12f691450a6b58cc1165c340f3a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>zmbt::decor::underlying&lt; E &gt;::underlying</definition>
        <argsstring>(E const v)</argsstring>
        <name>underlying</name>
        <qualifiedname>zmbt::decor::underlying::underlying</qualifiedname>
        <param>
          <type>E const</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" line="41" column="5" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" bodystart="41" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="structzmbt_1_1decor_1_1underlying_1ac64531fe06e27f0509b877e590423539" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structzmbt_1_1decor_1_1underlying" kindref="compound">underlying</ref> &amp;</type>
        <definition>underlying &amp; zmbt::decor::underlying&lt; E &gt;::operator=</definition>
        <argsstring>(E const v)</argsstring>
        <name>operator=</name>
        <qualifiedname>zmbt::decor::underlying::operator=</qualifiedname>
        <param>
          <type>E const</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" line="42" column="16" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" bodystart="42" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="structzmbt_1_1decor_1_1underlying_1a43587f63f71dd3fb43a0f14b467571f9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>zmbt::decor::underlying&lt; E &gt;::underlying</definition>
        <argsstring>(boost::json::string_view v)</argsstring>
        <name>underlying</name>
        <qualifiedname>zmbt::decor::underlying::underlying</qualifiedname>
        <param>
          <type>boost::json::string_view</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" line="45" column="5" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" bodystart="45" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="structzmbt_1_1decor_1_1underlying_1a213479fa5d92bde326fa478e4c71959f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structzmbt_1_1decor_1_1underlying" kindref="compound">underlying</ref> &amp;</type>
        <definition>underlying &amp; zmbt::decor::underlying&lt; E &gt;::operator=</definition>
        <argsstring>(boost::json::string_view v)</argsstring>
        <name>operator=</name>
        <qualifiedname>zmbt::decor::underlying::operator=</qualifiedname>
        <param>
          <type>boost::json::string_view</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" line="46" column="16" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" bodystart="46" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="structzmbt_1_1decor_1_1underlying_1a2c4d3be4ec6f7db6e903baf1f246882b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>decorated_type</type>
        <definition>decorated_type zmbt::decor::underlying&lt; E &gt;::value</definition>
        <argsstring>() const</argsstring>
        <name>value</name>
        <qualifiedname>zmbt::decor::underlying::value</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" line="49" column="20" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" bodystart="49" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="structzmbt_1_1decor_1_1underlying_1a09b32631973dbe2b502de8366ed3fd06" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string zmbt::decor::underlying&lt; E &gt;::stringify</definition>
        <argsstring>() const</argsstring>
        <name>stringify</name>
        <qualifiedname>zmbt::decor::underlying::stringify</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" line="54" column="17" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" bodystart="54" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="structzmbt_1_1decor_1_1underlying_1a7f076825ee12f284fd10a86f162c863e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>zmbt::decor::underlying&lt; E &gt;::operator decorated_type</definition>
        <argsstring>() const</argsstring>
        <name>operator decorated_type</name>
        <qualifiedname>zmbt::decor::underlying::operator decorated_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" line="59" column="5" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" bodystart="59" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="structzmbt_1_1decor_1_1underlying_1ac5d1b1179aee79ac7c633552379f5496" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto zmbt::decor::underlying&lt; E &gt;::operator!</definition>
        <argsstring>() const</argsstring>
        <name>operator!</name>
        <qualifiedname>zmbt::decor::underlying::operator!</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" line="64" column="10" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" bodystart="64" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="structzmbt_1_1decor_1_1underlying_1a4449bfeee0569e1740cc2f063e90b9a1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto zmbt::decor::underlying&lt; E &gt;::operator~</definition>
        <argsstring>() const</argsstring>
        <name>operator~</name>
        <qualifiedname>zmbt::decor::underlying::operator~</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" line="65" column="10" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" bodystart="65" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="structzmbt_1_1decor_1_1underlying_1a82fd6b50c06eb41a7694518234bd132c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto zmbt::decor::underlying&lt; E &gt;::operator-</definition>
        <argsstring>() const</argsstring>
        <name>operator-</name>
        <qualifiedname>zmbt::decor::underlying::operator-</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" line="66" column="10" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" bodystart="66" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="structzmbt_1_1decor_1_1underlying_1acb2985bbea7427fb078cf17f2fa4038f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto zmbt::decor::underlying&lt; E &gt;::operator==</definition>
        <argsstring>(T const &amp;other) const</argsstring>
        <name>operator==</name>
        <qualifiedname>zmbt::decor::underlying::operator==</qualifiedname>
        <param>
          <type>T const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" line="68" column="22" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="structzmbt_1_1decor_1_1underlying_1ae4bdfedc8c8ecf4c055097960417d23e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto zmbt::decor::underlying&lt; E &gt;::operator!=</definition>
        <argsstring>(T const &amp;other) const</argsstring>
        <name>operator!=</name>
        <qualifiedname>zmbt::decor::underlying::operator!=</qualifiedname>
        <param>
          <type>T const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" line="69" column="22" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="structzmbt_1_1decor_1_1underlying_1a526c19e2e7c07ad1ae23d5bf78ab30c7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto zmbt::decor::underlying&lt; E &gt;::operator&gt;&gt;</definition>
        <argsstring>(T const &amp;other) const</argsstring>
        <name>operator&gt;&gt;</name>
        <qualifiedname>zmbt::decor::underlying::operator&gt;&gt;</qualifiedname>
        <param>
          <type>T const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" line="70" column="22" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" bodystart="70" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="structzmbt_1_1decor_1_1underlying_1ac371915ba357456a58c75ec67138a917" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto zmbt::decor::underlying&lt; E &gt;::operator&lt;&lt;</definition>
        <argsstring>(T const &amp;other) const</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>zmbt::decor::underlying::operator&lt;&lt;</qualifiedname>
        <param>
          <type>T const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" line="71" column="17" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" bodystart="71" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="structzmbt_1_1decor_1_1underlying_1a4db1611b292df24ae32fad9a7bf872c2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto zmbt::decor::underlying&lt; E &gt;::operator&lt;=</definition>
        <argsstring>(T const &amp;other) const</argsstring>
        <name>operator&lt;=</name>
        <qualifiedname>zmbt::decor::underlying::operator&lt;=</qualifiedname>
        <param>
          <type>T const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" line="72" column="17" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" bodystart="72" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="structzmbt_1_1decor_1_1underlying_1a13bdaa6812013d2f605ff0f4fd539f0a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto zmbt::decor::underlying&lt; E &gt;::operator&gt;=</definition>
        <argsstring>(T const &amp;other) const</argsstring>
        <name>operator&gt;=</name>
        <qualifiedname>zmbt::decor::underlying::operator&gt;=</qualifiedname>
        <param>
          <type>T const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" line="73" column="22" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" bodystart="73" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="structzmbt_1_1decor_1_1underlying_1afd25aede7b60eef65b00fb9787a70ee9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto zmbt::decor::underlying&lt; E &gt;::operator&lt;</definition>
        <argsstring>(T const &amp;other) const</argsstring>
        <name>operator&lt;</name>
        <qualifiedname>zmbt::decor::underlying::operator&lt;</qualifiedname>
        <param>
          <type>T const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" line="74" column="17" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" bodystart="74" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="structzmbt_1_1decor_1_1underlying_1a248e87b9230bf0446aa2c389ba1796d3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto zmbt::decor::underlying&lt; E &gt;::operator&gt;</definition>
        <argsstring>(T const &amp;other) const</argsstring>
        <name>operator&gt;</name>
        <qualifiedname>zmbt::decor::underlying::operator&gt;</qualifiedname>
        <param>
          <type>T const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" line="75" column="22" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="structzmbt_1_1decor_1_1underlying_1ad1f321d0b2394565aeaa531dd5465181" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto zmbt::decor::underlying&lt; E &gt;::operator+</definition>
        <argsstring>(T const &amp;other) const</argsstring>
        <name>operator+</name>
        <qualifiedname>zmbt::decor::underlying::operator+</qualifiedname>
        <param>
          <type>T const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" line="76" column="22" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" bodystart="76" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="structzmbt_1_1decor_1_1underlying_1a9b5ce72e5db6a262f11c6092f6800b41" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto zmbt::decor::underlying&lt; E &gt;::operator-</definition>
        <argsstring>(T const &amp;other) const</argsstring>
        <name>operator-</name>
        <qualifiedname>zmbt::decor::underlying::operator-</qualifiedname>
        <param>
          <type>T const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" line="77" column="22" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" bodystart="77" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="structzmbt_1_1decor_1_1underlying_1a9be87eb53406539e6fdedc07b7f49ad1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto zmbt::decor::underlying&lt; E &gt;::operator*</definition>
        <argsstring>(T const &amp;other) const</argsstring>
        <name>operator*</name>
        <qualifiedname>zmbt::decor::underlying::operator*</qualifiedname>
        <param>
          <type>T const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" line="78" column="22" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="structzmbt_1_1decor_1_1underlying_1ac318048481cbcd2d075c003f862c4864" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto zmbt::decor::underlying&lt; E &gt;::operator/</definition>
        <argsstring>(T const &amp;other) const</argsstring>
        <name>operator/</name>
        <qualifiedname>zmbt::decor::underlying::operator/</qualifiedname>
        <param>
          <type>T const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" line="79" column="22" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" bodystart="79" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="structzmbt_1_1decor_1_1underlying_1abf50d9e30ae3e19e6c184498566a0090" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto zmbt::decor::underlying&lt; E &gt;::operator%</definition>
        <argsstring>(T const &amp;other) const</argsstring>
        <name>operator%</name>
        <qualifiedname>zmbt::decor::underlying::operator%</qualifiedname>
        <param>
          <type>T const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" line="80" column="22" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" bodystart="80" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="structzmbt_1_1decor_1_1underlying_1a6f2ba0f0b47f7acaad17103f7219cd71" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto zmbt::decor::underlying&lt; E &gt;::operator&amp;</definition>
        <argsstring>(T const &amp;other) const</argsstring>
        <name>operator&amp;</name>
        <qualifiedname>zmbt::decor::underlying::operator&amp;</qualifiedname>
        <param>
          <type>T const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" line="81" column="22" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" bodystart="81" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="structzmbt_1_1decor_1_1underlying_1ad9ef5a7c3b73dc3fda68b94988eb8723" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto zmbt::decor::underlying&lt; E &gt;::operator|</definition>
        <argsstring>(T const &amp;other) const</argsstring>
        <name>operator|</name>
        <qualifiedname>zmbt::decor::underlying::operator|</qualifiedname>
        <param>
          <type>T const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" line="82" column="22" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" bodystart="82" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="structzmbt_1_1decor_1_1underlying_1acd27e63052dd8c2b0c66365c3153cc95" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto zmbt::decor::underlying&lt; E &gt;::operator^</definition>
        <argsstring>(T const &amp;other) const</argsstring>
        <name>operator^</name>
        <qualifiedname>zmbt::decor::underlying::operator^</qualifiedname>
        <param>
          <type>T const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" line="83" column="22" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" bodystart="83" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="structzmbt_1_1decor_1_1underlying_1a2778bb0b162aadd5b56e9af6797720d6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto zmbt::decor::underlying&lt; E &gt;::operator&amp;&amp;</definition>
        <argsstring>(T const &amp;other) const</argsstring>
        <name>operator&amp;&amp;</name>
        <qualifiedname>zmbt::decor::underlying::operator&amp;&amp;</qualifiedname>
        <param>
          <type>T const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" line="84" column="22" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" bodystart="84" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="structzmbt_1_1decor_1_1underlying_1a0827f4ce26ccadad4fef305b0f57a64d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto zmbt::decor::underlying&lt; E &gt;::operator||</definition>
        <argsstring>(T const &amp;other) const</argsstring>
        <name>operator||</name>
        <qualifiedname>zmbt::decor::underlying::operator||</qualifiedname>
        <param>
          <type>T const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" line="85" column="22" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" bodystart="85" bodyend="85"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" line="24" column="1" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp" bodystart="25" bodyend="89"/>
    <listofallmembers>
      <member refid="structzmbt_1_1decor_1_1underlying_1aff72876901d6f787d9e7c89e01816cf2" prot="public" virt="non-virtual"><scope>zmbt::decor::underlying</scope><name>decorated_type</name></member>
      <member refid="structzmbt_1_1decor_1_1underlying_1a7f076825ee12f284fd10a86f162c863e" prot="public" virt="non-virtual"><scope>zmbt::decor::underlying</scope><name>operator decorated_type</name></member>
      <member refid="structzmbt_1_1decor_1_1underlying_1ac5d1b1179aee79ac7c633552379f5496" prot="public" virt="non-virtual"><scope>zmbt::decor::underlying</scope><name>operator!</name></member>
      <member refid="structzmbt_1_1decor_1_1underlying_1ae4bdfedc8c8ecf4c055097960417d23e" prot="public" virt="non-virtual"><scope>zmbt::decor::underlying</scope><name>operator!=</name></member>
      <member refid="structzmbt_1_1decor_1_1underlying_1abf50d9e30ae3e19e6c184498566a0090" prot="public" virt="non-virtual"><scope>zmbt::decor::underlying</scope><name>operator%</name></member>
      <member refid="structzmbt_1_1decor_1_1underlying_1a6f2ba0f0b47f7acaad17103f7219cd71" prot="public" virt="non-virtual"><scope>zmbt::decor::underlying</scope><name>operator&amp;</name></member>
      <member refid="structzmbt_1_1decor_1_1underlying_1a2778bb0b162aadd5b56e9af6797720d6" prot="public" virt="non-virtual"><scope>zmbt::decor::underlying</scope><name>operator&amp;&amp;</name></member>
      <member refid="structzmbt_1_1decor_1_1underlying_1a9be87eb53406539e6fdedc07b7f49ad1" prot="public" virt="non-virtual"><scope>zmbt::decor::underlying</scope><name>operator*</name></member>
      <member refid="structzmbt_1_1decor_1_1underlying_1ad1f321d0b2394565aeaa531dd5465181" prot="public" virt="non-virtual"><scope>zmbt::decor::underlying</scope><name>operator+</name></member>
      <member refid="structzmbt_1_1decor_1_1underlying_1a82fd6b50c06eb41a7694518234bd132c" prot="public" virt="non-virtual"><scope>zmbt::decor::underlying</scope><name>operator-</name></member>
      <member refid="structzmbt_1_1decor_1_1underlying_1a9b5ce72e5db6a262f11c6092f6800b41" prot="public" virt="non-virtual"><scope>zmbt::decor::underlying</scope><name>operator-</name></member>
      <member refid="structzmbt_1_1decor_1_1underlying_1ac318048481cbcd2d075c003f862c4864" prot="public" virt="non-virtual"><scope>zmbt::decor::underlying</scope><name>operator/</name></member>
      <member refid="structzmbt_1_1decor_1_1underlying_1afd25aede7b60eef65b00fb9787a70ee9" prot="public" virt="non-virtual"><scope>zmbt::decor::underlying</scope><name>operator&lt;</name></member>
      <member refid="structzmbt_1_1decor_1_1underlying_1ac371915ba357456a58c75ec67138a917" prot="public" virt="non-virtual"><scope>zmbt::decor::underlying</scope><name>operator&lt;&lt;</name></member>
      <member refid="structzmbt_1_1decor_1_1underlying_1a4db1611b292df24ae32fad9a7bf872c2" prot="public" virt="non-virtual"><scope>zmbt::decor::underlying</scope><name>operator&lt;=</name></member>
      <member refid="structzmbt_1_1decor_1_1underlying_1a5247a480f22c8ab1efa60f9c1ce0b544" prot="public" virt="non-virtual"><scope>zmbt::decor::underlying</scope><name>operator=</name></member>
      <member refid="structzmbt_1_1decor_1_1underlying_1a1c89c6a60d6be58ce186ff054ff9b1e0" prot="public" virt="non-virtual"><scope>zmbt::decor::underlying</scope><name>operator=</name></member>
      <member refid="structzmbt_1_1decor_1_1underlying_1a734ebb34f06048ecc74902dd21031407" prot="public" virt="non-virtual"><scope>zmbt::decor::underlying</scope><name>operator=</name></member>
      <member refid="structzmbt_1_1decor_1_1underlying_1ac64531fe06e27f0509b877e590423539" prot="public" virt="non-virtual"><scope>zmbt::decor::underlying</scope><name>operator=</name></member>
      <member refid="structzmbt_1_1decor_1_1underlying_1a213479fa5d92bde326fa478e4c71959f" prot="public" virt="non-virtual"><scope>zmbt::decor::underlying</scope><name>operator=</name></member>
      <member refid="structzmbt_1_1decor_1_1underlying_1acb2985bbea7427fb078cf17f2fa4038f" prot="public" virt="non-virtual"><scope>zmbt::decor::underlying</scope><name>operator==</name></member>
      <member refid="structzmbt_1_1decor_1_1underlying_1a248e87b9230bf0446aa2c389ba1796d3" prot="public" virt="non-virtual"><scope>zmbt::decor::underlying</scope><name>operator&gt;</name></member>
      <member refid="structzmbt_1_1decor_1_1underlying_1a13bdaa6812013d2f605ff0f4fd539f0a" prot="public" virt="non-virtual"><scope>zmbt::decor::underlying</scope><name>operator&gt;=</name></member>
      <member refid="structzmbt_1_1decor_1_1underlying_1a526c19e2e7c07ad1ae23d5bf78ab30c7" prot="public" virt="non-virtual"><scope>zmbt::decor::underlying</scope><name>operator&gt;&gt;</name></member>
      <member refid="structzmbt_1_1decor_1_1underlying_1acd27e63052dd8c2b0c66365c3153cc95" prot="public" virt="non-virtual"><scope>zmbt::decor::underlying</scope><name>operator^</name></member>
      <member refid="structzmbt_1_1decor_1_1underlying_1ad9ef5a7c3b73dc3fda68b94988eb8723" prot="public" virt="non-virtual"><scope>zmbt::decor::underlying</scope><name>operator|</name></member>
      <member refid="structzmbt_1_1decor_1_1underlying_1a0827f4ce26ccadad4fef305b0f57a64d" prot="public" virt="non-virtual"><scope>zmbt::decor::underlying</scope><name>operator||</name></member>
      <member refid="structzmbt_1_1decor_1_1underlying_1a4449bfeee0569e1740cc2f063e90b9a1" prot="public" virt="non-virtual"><scope>zmbt::decor::underlying</scope><name>operator~</name></member>
      <member refid="structzmbt_1_1decor_1_1underlying_1a09b32631973dbe2b502de8366ed3fd06" prot="public" virt="non-virtual"><scope>zmbt::decor::underlying</scope><name>stringify</name></member>
      <member refid="structzmbt_1_1decor_1_1underlying_1a2688612103f39970614621689e6b4de8" prot="public" virt="non-virtual"><scope>zmbt::decor::underlying</scope><name>underlying</name></member>
      <member refid="structzmbt_1_1decor_1_1underlying_1afb4121f7c2c05a60a2311ea9057d0f58" prot="public" virt="non-virtual"><scope>zmbt::decor::underlying</scope><name>underlying</name></member>
      <member refid="structzmbt_1_1decor_1_1underlying_1acf328a4656fcb0a63fb392a021e9168e" prot="public" virt="non-virtual"><scope>zmbt::decor::underlying</scope><name>underlying</name></member>
      <member refid="structzmbt_1_1decor_1_1underlying_1af55816983731da12e265ab04b1255463" prot="public" virt="non-virtual"><scope>zmbt::decor::underlying</scope><name>underlying</name></member>
      <member refid="structzmbt_1_1decor_1_1underlying_1a3fb0d12f691450a6b58cc1165c340f3a" prot="public" virt="non-virtual"><scope>zmbt::decor::underlying</scope><name>underlying</name></member>
      <member refid="structzmbt_1_1decor_1_1underlying_1a43587f63f71dd3fb43a0f14b467571f9" prot="public" virt="non-virtual"><scope>zmbt::decor::underlying</scope><name>underlying</name></member>
      <member refid="structzmbt_1_1decor_1_1underlying_1a2c4d3be4ec6f7db6e903baf1f246882b" prot="public" virt="non-virtual"><scope>zmbt::decor::underlying</scope><name>value</name></member>
      <member refid="structzmbt_1_1decor_1_1underlying_1a193c4acfb7fafb09e91c064987f00fa4" prot="private" virt="non-virtual"><scope>zmbt::decor::underlying</scope><name>value_</name></member>
      <member refid="structzmbt_1_1decor_1_1underlying_1ad8185353099d70c36ff99dc1a8c06175" prot="public" virt="non-virtual"><scope>zmbt::decor::underlying</scope><name>~underlying</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
