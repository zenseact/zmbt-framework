<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classzmbt_1_1mapping_1_1PipeHandle" kind="class" language="C++" prot="public">
    <compoundname>zmbt::mapping::PipeHandle</compoundname>
    <includes refid="pipe__handle_8hpp" local="no">pipe_handle.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classzmbt_1_1mapping_1_1PipeHandle_1a60159f1cbfa56be0160b47b1c70269da" prot="private" static="no" mutable="no">
        <type><ref refid="classzmbt_1_1JsonNode" kindref="compound">JsonNode</ref></type>
        <definition>JsonNode zmbt::mapping::PipeHandle::data_</definition>
        <argsstring></argsstring>
        <name>data_</name>
        <qualifiedname>zmbt::mapping::PipeHandle::data_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/mapping/pipe_handle.hpp" line="26" column="14" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/mapping/pipe_handle.hpp" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classzmbt_1_1mapping_1_1PipeHandle_1aaacdfa962666eb70c9e71d09fd97d8d2" prot="private" static="no" mutable="no">
        <type><ref refid="classzmbt_1_1Environment" kindref="compound">Environment</ref></type>
        <definition>Environment zmbt::mapping::PipeHandle::env</definition>
        <argsstring></argsstring>
        <name>env</name>
        <qualifiedname>zmbt::mapping::PipeHandle::env</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/mapping/pipe_handle.hpp" line="27" column="17" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/mapping/pipe_handle.hpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classzmbt_1_1mapping_1_1PipeHandle_1aaa7b75439d5af79b37de86c90afa45c1" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool zmbt::mapping::PipeHandle::should_flatten_</definition>
        <argsstring></argsstring>
        <name>should_flatten_</name>
        <qualifiedname>zmbt::mapping::PipeHandle::should_flatten_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/mapping/pipe_handle.hpp" line="28" column="10" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/mapping/pipe_handle.hpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classzmbt_1_1mapping_1_1PipeHandle_1a31f5408f6a065afaee7122fbb79e567a" prot="private" static="no" mutable="no">
        <type>std::list&lt; <ref refid="classzmbt_1_1mapping_1_1ChannelHandle" kindref="compound">ChannelHandle</ref> &gt;</type>
        <definition>std::list&lt;ChannelHandle&gt; zmbt::mapping::PipeHandle::channels_</definition>
        <argsstring></argsstring>
        <name>channels_</name>
        <qualifiedname>zmbt::mapping::PipeHandle::channels_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/mapping/pipe_handle.hpp" line="30" column="15" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/mapping/pipe_handle.hpp" bodystart="30" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classzmbt_1_1mapping_1_1PipeHandle_1aab96b464290d6beaebaa53d0008ecfed" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>boost::json::value</type>
        <definition>boost::json::value zmbt::mapping::PipeHandle::observe_blend</definition>
        <argsstring>() const</argsstring>
        <name>observe_blend</name>
        <qualifiedname>zmbt::mapping::PipeHandle::observe_blend</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/mapping/pipe_handle.hpp" line="31" column="24"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classzmbt_1_1mapping_1_1PipeHandle_1a4009ae6e834fe8a19ae0ae1dd031e2e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>zmbt::mapping::PipeHandle::PipeHandle</definition>
        <argsstring>(JsonNode &amp;model, std::size_t const pipe_idx)</argsstring>
        <name>PipeHandle</name>
        <qualifiedname>zmbt::mapping::PipeHandle::PipeHandle</qualifiedname>
        <param>
          <type><ref refid="classzmbt_1_1JsonNode" kindref="compound">JsonNode</ref> &amp;</type>
          <declname>model</declname>
        </param>
        <param>
          <type>std::size_t const</type>
          <declname>pipe_idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/mapping/pipe_handle.hpp" line="37" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classzmbt_1_1mapping_1_1PipeHandle_1ad92beefcf96e60db05a6f2ea6072a9f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>zmbt::mapping::PipeHandle::~PipeHandle</definition>
        <argsstring>()=default</argsstring>
        <name>~PipeHandle</name>
        <qualifiedname>zmbt::mapping::PipeHandle::~PipeHandle</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/mapping/pipe_handle.hpp" line="39" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classzmbt_1_1mapping_1_1PipeHandle_1a2a899ff78e1531a4f6caaa2fccd3d848" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>boost::json::value</type>
        <definition>boost::json::value zmbt::mapping::PipeHandle::type</definition>
        <argsstring>() const</argsstring>
        <name>type</name>
        <qualifiedname>zmbt::mapping::PipeHandle::type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/mapping/pipe_handle.hpp" line="41" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classzmbt_1_1mapping_1_1PipeHandle_1a63a314d4e223f1f1bbff5427e9c44b55" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool zmbt::mapping::PipeHandle::is_input</definition>
        <argsstring>() const</argsstring>
        <name>is_input</name>
        <qualifiedname>zmbt::mapping::PipeHandle::is_input</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/mapping/pipe_handle.hpp" line="42" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classzmbt_1_1mapping_1_1PipeHandle_1aa8a9c4d325d6455acda05b1be1e88304" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool zmbt::mapping::PipeHandle::is_output</definition>
        <argsstring>() const</argsstring>
        <name>is_output</name>
        <qualifiedname>zmbt::mapping::PipeHandle::is_output</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/mapping/pipe_handle.hpp" line="43" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classzmbt_1_1mapping_1_1PipeHandle_1a89e8ed4ba88368ff0ef4f55bf96552fd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool zmbt::mapping::PipeHandle::has_expression</definition>
        <argsstring>() const</argsstring>
        <name>has_expression</name>
        <qualifiedname>zmbt::mapping::PipeHandle::has_expression</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/mapping/pipe_handle.hpp" line="44" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classzmbt_1_1mapping_1_1PipeHandle_1af3a83fa62797fdea31d6d486a9390d2f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzmbt_1_1lang_1_1Expression" kindref="compound">lang::Expression</ref></type>
        <definition>lang::Expression zmbt::mapping::PipeHandle::expression</definition>
        <argsstring>() const</argsstring>
        <name>expression</name>
        <qualifiedname>zmbt::mapping::PipeHandle::expression</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/mapping/pipe_handle.hpp" line="45" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classzmbt_1_1mapping_1_1PipeHandle_1a6d571acff69768714135b6913e487af2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool zmbt::mapping::PipeHandle::overload</definition>
        <argsstring>(lang::Expression &amp;e) const</argsstring>
        <name>overload</name>
        <qualifiedname>zmbt::mapping::PipeHandle::overload</qualifiedname>
        <param>
          <type><ref refid="classzmbt_1_1lang_1_1Expression" kindref="compound">lang::Expression</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/mapping/pipe_handle.hpp" line="46" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classzmbt_1_1mapping_1_1PipeHandle_1aecb57d7e3a005aa9c76430effbdc2817" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void zmbt::mapping::PipeHandle::inject</definition>
        <argsstring>(lang::Expression expr) const</argsstring>
        <name>inject</name>
        <qualifiedname>zmbt::mapping::PipeHandle::inject</qualifiedname>
        <param>
          <type><ref refid="classzmbt_1_1lang_1_1Expression" kindref="compound">lang::Expression</ref></type>
          <declname>expr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/mapping/pipe_handle.hpp" line="48" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classzmbt_1_1mapping_1_1PipeHandle_1aa95b09ca8e72fcec31d599f381cd6c49" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>boost::json::value</type>
        <definition>boost::json::value zmbt::mapping::PipeHandle::observe</definition>
        <argsstring>() const</argsstring>
        <name>observe</name>
        <qualifiedname>zmbt::mapping::PipeHandle::observe</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/mapping/pipe_handle.hpp" line="49" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classzmbt_1_1mapping_1_1PipeHandle_1a93369f4e9109f9c205f9d069232b4284" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int zmbt::mapping::PipeHandle::column</definition>
        <argsstring>() const</argsstring>
        <name>column</name>
        <qualifiedname>zmbt::mapping::PipeHandle::column</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/mapping/pipe_handle.hpp" line="51" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classzmbt_1_1mapping_1_1PipeHandle_1a0460ebb62f591b67b638f2902e727de3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>boost::json::value</type>
        <definition>boost::json::value zmbt::mapping::PipeHandle::index</definition>
        <argsstring>() const</argsstring>
        <name>index</name>
        <qualifiedname>zmbt::mapping::PipeHandle::index</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/mapping/pipe_handle.hpp" line="52" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classzmbt_1_1mapping_1_1PipeHandle_1a8eb9aac5ef7ac082d3fe0acb62896aa5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::list&lt; <ref refid="classzmbt_1_1mapping_1_1ChannelHandle" kindref="compound">ChannelHandle</ref> &gt; const &amp;</type>
        <definition>std::list&lt; ChannelHandle &gt; const  &amp; zmbt::mapping::PipeHandle::channels</definition>
        <argsstring>() const</argsstring>
        <name>channels</name>
        <qualifiedname>zmbt::mapping::PipeHandle::channels</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/mapping/pipe_handle.hpp" line="54" column="21" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/mapping/pipe_handle.hpp" bodystart="54" bodyend="57"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Pipe clause handle for <ref refid="classzmbt_1_1mapping_1_1SignalMapping" kindref="compound">SignalMapping</ref> model. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/mapping/pipe_handle.hpp" line="24" column="1" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/mapping/pipe_handle.hpp" bodystart="25" bodyend="59"/>
    <listofallmembers>
      <member refid="classzmbt_1_1mapping_1_1PipeHandle_1a8eb9aac5ef7ac082d3fe0acb62896aa5" prot="public" virt="non-virtual"><scope>zmbt::mapping::PipeHandle</scope><name>channels</name></member>
      <member refid="classzmbt_1_1mapping_1_1PipeHandle_1a31f5408f6a065afaee7122fbb79e567a" prot="private" virt="non-virtual"><scope>zmbt::mapping::PipeHandle</scope><name>channels_</name></member>
      <member refid="classzmbt_1_1mapping_1_1PipeHandle_1a93369f4e9109f9c205f9d069232b4284" prot="public" virt="non-virtual"><scope>zmbt::mapping::PipeHandle</scope><name>column</name></member>
      <member refid="classzmbt_1_1mapping_1_1PipeHandle_1a60159f1cbfa56be0160b47b1c70269da" prot="private" virt="non-virtual"><scope>zmbt::mapping::PipeHandle</scope><name>data_</name></member>
      <member refid="classzmbt_1_1mapping_1_1PipeHandle_1aaacdfa962666eb70c9e71d09fd97d8d2" prot="private" virt="non-virtual"><scope>zmbt::mapping::PipeHandle</scope><name>env</name></member>
      <member refid="classzmbt_1_1mapping_1_1PipeHandle_1af3a83fa62797fdea31d6d486a9390d2f" prot="public" virt="non-virtual"><scope>zmbt::mapping::PipeHandle</scope><name>expression</name></member>
      <member refid="classzmbt_1_1mapping_1_1PipeHandle_1a89e8ed4ba88368ff0ef4f55bf96552fd" prot="public" virt="non-virtual"><scope>zmbt::mapping::PipeHandle</scope><name>has_expression</name></member>
      <member refid="classzmbt_1_1mapping_1_1PipeHandle_1a0460ebb62f591b67b638f2902e727de3" prot="public" virt="non-virtual"><scope>zmbt::mapping::PipeHandle</scope><name>index</name></member>
      <member refid="classzmbt_1_1mapping_1_1PipeHandle_1aecb57d7e3a005aa9c76430effbdc2817" prot="public" virt="non-virtual"><scope>zmbt::mapping::PipeHandle</scope><name>inject</name></member>
      <member refid="classzmbt_1_1mapping_1_1PipeHandle_1a63a314d4e223f1f1bbff5427e9c44b55" prot="public" virt="non-virtual"><scope>zmbt::mapping::PipeHandle</scope><name>is_input</name></member>
      <member refid="classzmbt_1_1mapping_1_1PipeHandle_1aa8a9c4d325d6455acda05b1be1e88304" prot="public" virt="non-virtual"><scope>zmbt::mapping::PipeHandle</scope><name>is_output</name></member>
      <member refid="classzmbt_1_1mapping_1_1PipeHandle_1aa95b09ca8e72fcec31d599f381cd6c49" prot="public" virt="non-virtual"><scope>zmbt::mapping::PipeHandle</scope><name>observe</name></member>
      <member refid="classzmbt_1_1mapping_1_1PipeHandle_1aab96b464290d6beaebaa53d0008ecfed" prot="private" virt="non-virtual"><scope>zmbt::mapping::PipeHandle</scope><name>observe_blend</name></member>
      <member refid="classzmbt_1_1mapping_1_1PipeHandle_1a6d571acff69768714135b6913e487af2" prot="public" virt="non-virtual"><scope>zmbt::mapping::PipeHandle</scope><name>overload</name></member>
      <member refid="classzmbt_1_1mapping_1_1PipeHandle_1a4009ae6e834fe8a19ae0ae1dd031e2e8" prot="public" virt="non-virtual"><scope>zmbt::mapping::PipeHandle</scope><name>PipeHandle</name></member>
      <member refid="classzmbt_1_1mapping_1_1PipeHandle_1aaa7b75439d5af79b37de86c90afa45c1" prot="private" virt="non-virtual"><scope>zmbt::mapping::PipeHandle</scope><name>should_flatten_</name></member>
      <member refid="classzmbt_1_1mapping_1_1PipeHandle_1a2a899ff78e1531a4f6caaa2fccd3d848" prot="public" virt="non-virtual"><scope>zmbt::mapping::PipeHandle</scope><name>type</name></member>
      <member refid="classzmbt_1_1mapping_1_1PipeHandle_1ad92beefcf96e60db05a6f2ea6072a9f7" prot="public" virt="non-virtual"><scope>zmbt::mapping::PipeHandle</scope><name>~PipeHandle</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
