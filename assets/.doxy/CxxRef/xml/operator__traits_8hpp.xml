<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="operator__traits_8hpp" kind="file" language="C++">
    <compoundname>operator_traits.hpp</compoundname>
    <includes local="no">array</includes>
    <includes local="no">map</includes>
    <includes local="no">set</includes>
    <includes local="no">type_traits</includes>
    <includes local="no">tuple</includes>
    <includes local="no">unordered_map</includes>
    <includes local="no">unordered_set</includes>
    <includes local="no">vector</includes>
    <includes local="no">boost/type_traits.hpp</includes>
    <includes refid="aliases_8hpp" local="yes">aliases.hpp</includes>
    <includedby refid="core_8hpp" local="yes">zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/core.hpp</includedby>
    <incdepgraph>
      <node id="11">
        <label>aliases.hpp</label>
        <link refid="aliases_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/core/operator_traits.hpp</label>
        <link refid="operator__traits_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>array</label>
      </node>
      <node id="12">
        <label>boost/callable_traits.hpp</label>
      </node>
      <node id="13">
        <label>boost/mp11.hpp</label>
      </node>
      <node id="10">
        <label>boost/type_traits.hpp</label>
      </node>
      <node id="3">
        <label>map</label>
      </node>
      <node id="4">
        <label>set</label>
      </node>
      <node id="6">
        <label>tuple</label>
      </node>
      <node id="5">
        <label>type_traits</label>
      </node>
      <node id="7">
        <label>unordered_map</label>
      </node>
      <node id="8">
        <label>unordered_set</label>
      </node>
      <node id="9">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zenseact-mbt.hpp</label>
        <link refid="zenseact-mbt_8hpp"/>
      </node>
      <node id="3">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/all.hpp</label>
        <link refid="all_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/api.hpp</label>
        <link refid="api_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/api/model_test.hpp</label>
        <link refid="model__test_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/api/ns.hpp</label>
        <link refid="ns_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/core.hpp</label>
        <link refid="core_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/core/operator_traits.hpp</label>
        <link refid="operator__traits_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor.hpp</label>
        <link refid="decor_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/precise_real.hpp</label>
        <link refid="precise__real_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp</label>
        <link refid="underlying_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/expr.hpp</label>
        <link refid="expr_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/expr/api.hpp</label>
        <link refid="expr_2api_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/expr/api_signatures.hpp</label>
        <link refid="api__signatures_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/expr/attributes.hpp</label>
        <link refid="attributes_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/expr/encoding.hpp</label>
        <link refid="encoding_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/expr/eval_context.hpp</label>
        <link refid="eval__context_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/expr/eval_impl.hpp</label>
        <link refid="eval__impl_8hpp"/>
      </node>
      <node id="35">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/expr/eval_params.hpp</label>
        <link refid="eval__params_8hpp"/>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/expr/eval_validator.hpp</label>
        <link refid="eval__validator_8hpp"/>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/expr/expression.hpp</label>
        <link refid="expression_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/expr/expression_grammar.hpp</label>
        <link refid="expression__grammar_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/expr/keyword.hpp</label>
        <link refid="keyword_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/expr/keyword_grammar.hpp</label>
        <link refid="keyword__grammar_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/expr/keyword_info.hpp</label>
        <link refid="keyword__info_8hpp"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/expr/lazy_param.hpp</label>
        <link refid="lazy__param_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/expr/operator.hpp</label>
        <link refid="operator_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/expr/subexpression.hpp</label>
        <link refid="subexpression_8hpp"/>
      </node>
      <node id="14">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/mapping.hpp</label>
        <link refid="mapping_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/mapping/channel_handle.hpp</label>
        <link refid="channel__handle_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/mapping/model_definition.hpp</label>
        <link refid="model__definition_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/mapping/model_definition_helper.hpp</label>
        <link refid="model__definition__helper_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/mapping/model_definition_main.hpp</label>
        <link refid="model__definition__main_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/mapping/model_definition_node.hpp</label>
        <link refid="model__definition__node_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/mapping/model_definition_states.hpp</label>
        <link refid="model__definition__states_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/mapping/model_definition_transitions.hpp</label>
        <link refid="model__definition__transitions_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/mapping/pipe_handle.hpp</label>
        <link refid="pipe__handle_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/mapping/test_diagnostics.hpp</label>
        <link refid="test__diagnostics_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/mapping/test_parameter_resolver.hpp</label>
        <link refid="test__parameter__resolver_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/mapping/test_runner.hpp</label>
        <link refid="test__runner_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/model.hpp</label>
        <link refid="model_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/model/channel_kind.hpp</label>
        <link refid="channel__kind_8hpp"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/model/environment.hpp</label>
        <link refid="environment_8hpp"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/model/environment_data.hpp</label>
        <link refid="environment__data_8hpp"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/model/environment_interface_record.hpp</label>
        <link refid="environment__interface__record_8hpp"/>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/model/generator.hpp</label>
        <link refid="generator_8hpp"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/model/injection_table.hpp</label>
        <link refid="injection__table_8hpp"/>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/model/output_recorder.hpp</label>
        <link refid="output__recorder_8hpp"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/model/param_transform.hpp</label>
        <link refid="param__transform_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/model/parameter.hpp</label>
        <link refid="parameter_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/model/permanent_data.hpp</label>
        <link refid="permanent__data_8hpp"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/model/traits.hpp</label>
        <link refid="traits_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/model/trigger.hpp</label>
        <link refid="trigger_8hpp"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/reflect.hpp</label>
        <link refid="reflect_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/reflect/invocation.hpp</label>
        <link refid="invocation_8hpp"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/reflect/prototypes.hpp</label>
        <link refid="prototypes_8hpp"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/reflect/serialization.hpp</label>
        <link refid="serialization_8hpp"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/reflect/serialization_defaults.hpp</label>
        <link refid="serialization__defaults_8hpp"/>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/reflect/signal_traits.hpp</label>
        <link refid="signal__traits_8hpp"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacezmbt">zmbt</innernamespace>
    <sectiondef kind="define">
      <memberdef kind="define" id="operator__traits_8hpp_1a67a538b5ad585fbd65a2a073cc7dca14" prot="public" static="no">
        <name>ZMBT_WRAP_BOOST_TRAIT</name>
        <param><defname>has_operator</defname></param>
        <initializer>template &lt;class T, class E = void&gt; struct has_operator; \
template &lt;class T&gt; \
struct has_operator&lt;T, enable_if_t&lt;not is_const_iterable&lt;T&gt;::value and not is_tuple&lt;T&gt;::value&gt;&gt; : boost::has_operator&lt;T&gt; {}; \
template &lt;class T&gt; \
struct has_operator&lt;T, enable_if_t&lt;is_const_iterable&lt;T&gt;::value&gt;&gt; : has_operator&lt;typename T::value_type&gt; {}; \
template &lt;class T&gt; \
struct has_operator&lt;T, enable_if_t&lt;is_tuple&lt;T&gt;::value&gt;&gt; : mp_all_of&lt;T, has_operator&gt; {};</initializer>
        <briefdescription>
<para>expand boost::has_operator to containers and tuples </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/core/operator_traits.hpp" line="30" column="9" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/core/operator_traits.hpp" bodystart="30" bodyend="37"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="copyright"><para>(c) Copyright 2022-2023 Volvo Car Corporation </para>
</simplesect>
<simplesect kind="copyright"><para>(c) Copyright 2024 Zenseact AB </para>
</simplesect>
<simplesect kind="par"><title>License</title><para>SPDX-License-Identifier: Apache-2.0 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZMBT_CORE_OPERATOR_TRAITS_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZMBT_CORE_OPERATOR_TRAITS_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;array&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tuple&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/type_traits.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="aliases_8hpp" kindref="compound">aliases.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacezmbt" kindref="compound">zmbt</ref><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="operator__traits_8hpp_1a67a538b5ad585fbd65a2a073cc7dca14" refkind="member"><highlight class="preprocessor">#define<sp/>ZMBT_WRAP_BOOST_TRAIT(has_operator)<sp/>\</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor">template<sp/>&lt;class<sp/>T,<sp/>class<sp/>E<sp/>=<sp/>void&gt;<sp/>struct<sp/>has_operator;<sp/>\</highlight></codeline>
<codeline lineno="32"><highlight class="preprocessor">template<sp/>&lt;class<sp/>T&gt;<sp/>\</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor">struct<sp/>has_operator&lt;T,<sp/>enable_if_t&lt;not<sp/>is_const_iterable&lt;T&gt;::value<sp/>and<sp/>not<sp/>is_tuple&lt;T&gt;::value&gt;&gt;<sp/>:<sp/>boost::has_operator&lt;T&gt;<sp/>{};<sp/>\</highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor">template<sp/>&lt;class<sp/>T&gt;<sp/>\</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor">struct<sp/>has_operator&lt;T,<sp/>enable_if_t&lt;is_const_iterable&lt;T&gt;::value&gt;&gt;<sp/>:<sp/>has_operator&lt;typename<sp/>T::value_type&gt;<sp/>{};<sp/>\</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor">template<sp/>&lt;class<sp/>T&gt;<sp/>\</highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor">struct<sp/>has_operator&lt;T,<sp/>enable_if_t&lt;is_tuple&lt;T&gt;::value&gt;&gt;<sp/>:<sp/>mp_all_of&lt;T,<sp/>has_operator&gt;<sp/>{};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="structzmbt_1_1has__bit__and" refkind="compound"><highlight class="normal"><ref refid="operator__traits_8hpp_1a67a538b5ad585fbd65a2a073cc7dca14" kindref="member">ZMBT_WRAP_BOOST_TRAIT</ref>(<ref refid="structzmbt_1_1has__bit__and" kindref="compound">has_bit_and</ref>)</highlight></codeline>
<codeline lineno="40" refid="structzmbt_1_1has__bit__or" refkind="compound"><highlight class="normal"><ref refid="operator__traits_8hpp_1a67a538b5ad585fbd65a2a073cc7dca14" kindref="member">ZMBT_WRAP_BOOST_TRAIT</ref>(<ref refid="structzmbt_1_1has__bit__or" kindref="compound">has_bit_or</ref>)</highlight></codeline>
<codeline lineno="41" refid="structzmbt_1_1has__bit__xor" refkind="compound"><highlight class="normal"><ref refid="operator__traits_8hpp_1a67a538b5ad585fbd65a2a073cc7dca14" kindref="member">ZMBT_WRAP_BOOST_TRAIT</ref>(<ref refid="structzmbt_1_1has__bit__xor" kindref="compound">has_bit_xor</ref>)</highlight></codeline>
<codeline lineno="42" refid="structzmbt_1_1has__complement" refkind="compound"><highlight class="normal"><ref refid="operator__traits_8hpp_1a67a538b5ad585fbd65a2a073cc7dca14" kindref="member">ZMBT_WRAP_BOOST_TRAIT</ref>(<ref refid="structzmbt_1_1has__complement" kindref="compound">has_complement</ref>)</highlight></codeline>
<codeline lineno="43" refid="structzmbt_1_1has__divides" refkind="compound"><highlight class="normal"><ref refid="operator__traits_8hpp_1a67a538b5ad585fbd65a2a073cc7dca14" kindref="member">ZMBT_WRAP_BOOST_TRAIT</ref>(<ref refid="structzmbt_1_1has__divides" kindref="compound">has_divides</ref>)</highlight></codeline>
<codeline lineno="44" refid="structzmbt_1_1has__equal__to" refkind="compound"><highlight class="normal"><ref refid="operator__traits_8hpp_1a67a538b5ad585fbd65a2a073cc7dca14" kindref="member">ZMBT_WRAP_BOOST_TRAIT</ref>(<ref refid="structzmbt_1_1has__equal__to" kindref="compound">has_equal_to</ref>)</highlight></codeline>
<codeline lineno="45" refid="structzmbt_1_1has__greater" refkind="compound"><highlight class="normal"><ref refid="operator__traits_8hpp_1a67a538b5ad585fbd65a2a073cc7dca14" kindref="member">ZMBT_WRAP_BOOST_TRAIT</ref>(<ref refid="structzmbt_1_1has__greater" kindref="compound">has_greater</ref>)</highlight></codeline>
<codeline lineno="46" refid="structzmbt_1_1has__greater__equal" refkind="compound"><highlight class="normal"><ref refid="operator__traits_8hpp_1a67a538b5ad585fbd65a2a073cc7dca14" kindref="member">ZMBT_WRAP_BOOST_TRAIT</ref>(<ref refid="structzmbt_1_1has__greater__equal" kindref="compound">has_greater_equal</ref>)</highlight></codeline>
<codeline lineno="47" refid="structzmbt_1_1has__left__shift" refkind="compound"><highlight class="normal"><ref refid="operator__traits_8hpp_1a67a538b5ad585fbd65a2a073cc7dca14" kindref="member">ZMBT_WRAP_BOOST_TRAIT</ref>(<ref refid="structzmbt_1_1has__left__shift" kindref="compound">has_left_shift</ref>)</highlight></codeline>
<codeline lineno="48" refid="structzmbt_1_1has__right__shift" refkind="compound"><highlight class="normal"><ref refid="operator__traits_8hpp_1a67a538b5ad585fbd65a2a073cc7dca14" kindref="member">ZMBT_WRAP_BOOST_TRAIT</ref>(<ref refid="structzmbt_1_1has__right__shift" kindref="compound">has_right_shift</ref>)</highlight></codeline>
<codeline lineno="49" refid="structzmbt_1_1has__less" refkind="compound"><highlight class="normal"><ref refid="operator__traits_8hpp_1a67a538b5ad585fbd65a2a073cc7dca14" kindref="member">ZMBT_WRAP_BOOST_TRAIT</ref>(<ref refid="structzmbt_1_1has__less" kindref="compound">has_less</ref>)</highlight></codeline>
<codeline lineno="50" refid="structzmbt_1_1has__less__equal" refkind="compound"><highlight class="normal"><ref refid="operator__traits_8hpp_1a67a538b5ad585fbd65a2a073cc7dca14" kindref="member">ZMBT_WRAP_BOOST_TRAIT</ref>(<ref refid="structzmbt_1_1has__less__equal" kindref="compound">has_less_equal</ref>)</highlight></codeline>
<codeline lineno="51" refid="structzmbt_1_1has__logical__and" refkind="compound"><highlight class="normal"><ref refid="operator__traits_8hpp_1a67a538b5ad585fbd65a2a073cc7dca14" kindref="member">ZMBT_WRAP_BOOST_TRAIT</ref>(<ref refid="structzmbt_1_1has__logical__and" kindref="compound">has_logical_and</ref>)</highlight></codeline>
<codeline lineno="52" refid="structzmbt_1_1has__logical__not" refkind="compound"><highlight class="normal"><ref refid="operator__traits_8hpp_1a67a538b5ad585fbd65a2a073cc7dca14" kindref="member">ZMBT_WRAP_BOOST_TRAIT</ref>(<ref refid="structzmbt_1_1has__logical__not" kindref="compound">has_logical_not</ref>)</highlight></codeline>
<codeline lineno="53" refid="structzmbt_1_1has__logical__or" refkind="compound"><highlight class="normal"><ref refid="operator__traits_8hpp_1a67a538b5ad585fbd65a2a073cc7dca14" kindref="member">ZMBT_WRAP_BOOST_TRAIT</ref>(<ref refid="structzmbt_1_1has__logical__or" kindref="compound">has_logical_or</ref>)</highlight></codeline>
<codeline lineno="54" refid="structzmbt_1_1has__minus" refkind="compound"><highlight class="normal"><ref refid="operator__traits_8hpp_1a67a538b5ad585fbd65a2a073cc7dca14" kindref="member">ZMBT_WRAP_BOOST_TRAIT</ref>(<ref refid="structzmbt_1_1has__minus" kindref="compound">has_minus</ref>)</highlight></codeline>
<codeline lineno="55" refid="structzmbt_1_1has__modulus" refkind="compound"><highlight class="normal"><ref refid="operator__traits_8hpp_1a67a538b5ad585fbd65a2a073cc7dca14" kindref="member">ZMBT_WRAP_BOOST_TRAIT</ref>(<ref refid="structzmbt_1_1has__modulus" kindref="compound">has_modulus</ref>)</highlight></codeline>
<codeline lineno="56" refid="structzmbt_1_1has__multiplies" refkind="compound"><highlight class="normal"><ref refid="operator__traits_8hpp_1a67a538b5ad585fbd65a2a073cc7dca14" kindref="member">ZMBT_WRAP_BOOST_TRAIT</ref>(<ref refid="structzmbt_1_1has__multiplies" kindref="compound">has_multiplies</ref>)</highlight></codeline>
<codeline lineno="57" refid="structzmbt_1_1has__negate" refkind="compound"><highlight class="normal"><ref refid="operator__traits_8hpp_1a67a538b5ad585fbd65a2a073cc7dca14" kindref="member">ZMBT_WRAP_BOOST_TRAIT</ref>(<ref refid="structzmbt_1_1has__negate" kindref="compound">has_negate</ref>)</highlight></codeline>
<codeline lineno="58" refid="structzmbt_1_1has__not__equal__to" refkind="compound"><highlight class="normal"><ref refid="operator__traits_8hpp_1a67a538b5ad585fbd65a2a073cc7dca14" kindref="member">ZMBT_WRAP_BOOST_TRAIT</ref>(<ref refid="structzmbt_1_1has__not__equal__to" kindref="compound">has_not_equal_to</ref>)</highlight></codeline>
<codeline lineno="59" refid="structzmbt_1_1has__plus" refkind="compound"><highlight class="normal"><ref refid="operator__traits_8hpp_1a67a538b5ad585fbd65a2a073cc7dca14" kindref="member">ZMBT_WRAP_BOOST_TRAIT</ref>(<ref refid="structzmbt_1_1has__plus" kindref="compound">has_plus</ref>)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>ZMBT_WRAP_BOOST_TRAIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>ZMBT_CORE_OPERATOR_TRAITS_HPP_</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/core/operator_traits.hpp"/>
  </compounddef>
</doxygen>
