<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classzmbt_1_1Config" kind="class" language="C++" prot="public" final="yes">
    <compoundname>zmbt::Config</compoundname>
    <includes refid="config_8hpp" local="no">config.hpp</includes>
    <innerclass refid="structzmbt_1_1Config_1_1PersistentConfig" prot="private">zmbt::Config::PersistentConfig</innerclass>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classzmbt_1_1Config_1a011261f1f33b09d3b6379a21f9f7cbcd" prot="public" static="no">
        <type>std::function&lt; void(boost::json::value const  &amp;)&gt;</type>
        <definition>using zmbt::Config::FailureHandler =  std::function&lt;void(boost::json::value const&amp;)&gt;</definition>
        <argsstring></argsstring>
        <name>FailureHandler</name>
        <qualifiedname>zmbt::Config::FailureHandler</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/application/config.hpp" line="25" column="5" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/application/config.hpp" bodystart="25" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classzmbt_1_1Config_1acab68384dc64b537c0987ae1101d1b6c" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; PersistentConfig &gt;</type>
        <definition>std::shared_ptr&lt;PersistentConfig&gt; zmbt::Config::config_</definition>
        <argsstring></argsstring>
        <name>config_</name>
        <qualifiedname>zmbt::Config::config_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/application/config.hpp" line="50" column="21" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/application/config.hpp" bodystart="50" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classzmbt_1_1Config_1a8483906c5a79c2a4a689820461639d6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>zmbt::Config::Config</definition>
        <argsstring>()</argsstring>
        <name>Config</name>
        <qualifiedname>zmbt::Config::Config</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/application/config.hpp" line="27" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classzmbt_1_1Config_1afa53f219da41539204cf2eaa12ae01e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>zmbt::Config::Config</definition>
        <argsstring>(Config const &amp;)=default</argsstring>
        <name>Config</name>
        <qualifiedname>zmbt::Config::Config</qualifiedname>
        <param>
          <type><ref refid="classzmbt_1_1Config" kindref="compound">Config</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/application/config.hpp" line="29" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classzmbt_1_1Config_1a11e51ae9fd7622bffa12de1970d45694" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>zmbt::Config::Config</definition>
        <argsstring>(Config &amp;&amp;)=default</argsstring>
        <name>Config</name>
        <qualifiedname>zmbt::Config::Config</qualifiedname>
        <param>
          <type><ref refid="classzmbt_1_1Config" kindref="compound">Config</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/application/config.hpp" line="30" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classzmbt_1_1Config_1a76d00ff323527e0445ed1ffcda2311e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzmbt_1_1Config" kindref="compound">Config</ref> &amp;</type>
        <definition>Config &amp; zmbt::Config::operator=</definition>
        <argsstring>(Config const &amp;)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>zmbt::Config::operator=</qualifiedname>
        <param>
          <type><ref refid="classzmbt_1_1Config" kindref="compound">Config</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/application/config.hpp" line="31" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classzmbt_1_1Config_1a4f4c4ef6153d33a99e0745892923cde8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzmbt_1_1Config" kindref="compound">Config</ref> &amp;</type>
        <definition>Config &amp; zmbt::Config::operator=</definition>
        <argsstring>(Config &amp;&amp;)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>zmbt::Config::operator=</qualifiedname>
        <param>
          <type><ref refid="classzmbt_1_1Config" kindref="compound">Config</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/application/config.hpp" line="32" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classzmbt_1_1Config_1a679dd1a86fa19ac950881b0554b0855b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>zmbt::Config::~Config</definition>
        <argsstring>()=default</argsstring>
        <name>~Config</name>
        <qualifiedname>zmbt::Config::~Config</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/application/config.hpp" line="34" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classzmbt_1_1Config_1acba413a2975087b61ffc4f071f368daa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzmbt_1_1Config" kindref="compound">Config</ref> &amp;</type>
        <definition>Config &amp; zmbt::Config::SetFailureHandler</definition>
        <argsstring>(FailureHandler const &amp;fn)</argsstring>
        <name>SetFailureHandler</name>
        <qualifiedname>zmbt::Config::SetFailureHandler</qualifiedname>
        <param>
          <type>FailureHandler const &amp;</type>
          <declname>fn</declname>
        </param>
        <briefdescription>
<para>Set custom test failure handler. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/application/config.hpp" line="37" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classzmbt_1_1Config_1a831277d6c79c27d07c2b07da7cb3af10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzmbt_1_1Config" kindref="compound">Config</ref> &amp;</type>
        <definition>Config &amp; zmbt::Config::ResetFailureHandler</definition>
        <argsstring>()</argsstring>
        <name>ResetFailureHandler</name>
        <qualifiedname>zmbt::Config::ResetFailureHandler</qualifiedname>
        <briefdescription>
<para>Reset the test handler to default. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/application/config.hpp" line="40" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classzmbt_1_1Config_1acbd82088883333e258882e48f874db71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzmbt_1_1Config" kindref="compound">Config</ref> &amp;</type>
        <definition>Config &amp; zmbt::Config::HandleTestFailure</definition>
        <argsstring>(boost::json::value const &amp;diagnostics)</argsstring>
        <name>HandleTestFailure</name>
        <qualifiedname>zmbt::Config::HandleTestFailure</qualifiedname>
        <param>
          <type>boost::json::value const &amp;</type>
          <declname>diagnostics</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/application/config.hpp" line="42" column="12"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Global app config. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/application/config.hpp" line="22" column="1" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/application/config.hpp" bodystart="23" bodyend="51"/>
    <listofallmembers>
      <member refid="classzmbt_1_1Config_1a8483906c5a79c2a4a689820461639d6a" prot="public" virt="non-virtual"><scope>zmbt::Config</scope><name>Config</name></member>
      <member refid="classzmbt_1_1Config_1afa53f219da41539204cf2eaa12ae01e7" prot="public" virt="non-virtual"><scope>zmbt::Config</scope><name>Config</name></member>
      <member refid="classzmbt_1_1Config_1a11e51ae9fd7622bffa12de1970d45694" prot="public" virt="non-virtual"><scope>zmbt::Config</scope><name>Config</name></member>
      <member refid="classzmbt_1_1Config_1acab68384dc64b537c0987ae1101d1b6c" prot="private" virt="non-virtual"><scope>zmbt::Config</scope><name>config_</name></member>
      <member refid="classzmbt_1_1Config_1a011261f1f33b09d3b6379a21f9f7cbcd" prot="public" virt="non-virtual"><scope>zmbt::Config</scope><name>FailureHandler</name></member>
      <member refid="classzmbt_1_1Config_1acbd82088883333e258882e48f874db71" prot="public" virt="non-virtual"><scope>zmbt::Config</scope><name>HandleTestFailure</name></member>
      <member refid="classzmbt_1_1Config_1a76d00ff323527e0445ed1ffcda2311e4" prot="public" virt="non-virtual"><scope>zmbt::Config</scope><name>operator=</name></member>
      <member refid="classzmbt_1_1Config_1a4f4c4ef6153d33a99e0745892923cde8" prot="public" virt="non-virtual"><scope>zmbt::Config</scope><name>operator=</name></member>
      <member refid="classzmbt_1_1Config_1a831277d6c79c27d07c2b07da7cb3af10" prot="public" virt="non-virtual"><scope>zmbt::Config</scope><name>ResetFailureHandler</name></member>
      <member refid="classzmbt_1_1Config_1acba413a2975087b61ffc4f071f368daa" prot="public" virt="non-virtual"><scope>zmbt::Config</scope><name>SetFailureHandler</name></member>
      <member refid="classzmbt_1_1Config_1a679dd1a86fa19ac950881b0554b0855b" prot="public" virt="non-virtual"><scope>zmbt::Config</scope><name>~Config</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
