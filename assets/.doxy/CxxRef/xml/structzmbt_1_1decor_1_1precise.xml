<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="structzmbt_1_1decor_1_1precise" kind="struct" language="C++" prot="public">
    <compoundname>zmbt::decor::precise</compoundname>
    <includes refid="precise__real_8hpp" local="no">precise_real.hpp</includes>
    <templateparamlist>
      <param>
        <type>class VT</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structzmbt_1_1decor_1_1precise_1a47f33a7600cf967a4e3ecc49b8d877c6" prot="public" static="no">
        <type>VT</type>
        <definition>using zmbt::decor::precise&lt; VT &gt;::decorated_type =  VT</definition>
        <argsstring></argsstring>
        <name>decorated_type</name>
        <qualifiedname>zmbt::decor::precise::decorated_type</qualifiedname>
        <briefdescription>
<para>The decorated type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/precise_real.hpp" line="64" column="5" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/precise_real.hpp" bodystart="64" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structzmbt_1_1decor_1_1precise_1adf5a788396bdc7284877eb18292e6d6a" prot="private" static="no" mutable="no">
        <type><ref refid="structzmbt_1_1decor_1_1precise_1a47f33a7600cf967a4e3ecc49b8d877c6" kindref="member">decorated_type</ref></type>
        <definition>decorated_type zmbt::decor::precise&lt; VT &gt;::value_</definition>
        <argsstring></argsstring>
        <name>value_</name>
        <qualifiedname>zmbt::decor::precise::value_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/precise_real.hpp" line="219" column="20" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/precise_real.hpp" bodystart="219" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structzmbt_1_1decor_1_1precise_1a7657dcebc3f1dd2e66c6021a5b5d8a84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>zmbt::decor::precise&lt; VT &gt;::~precise</definition>
        <argsstring>()=default</argsstring>
        <name>~precise</name>
        <qualifiedname>zmbt::decor::precise::~precise</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/precise_real.hpp" line="69" column="5"/>
      </memberdef>
      <memberdef kind="function" id="structzmbt_1_1decor_1_1precise_1a24fae16eb3113fc6f402fd582f710a29" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>zmbt::decor::precise&lt; VT &gt;::precise</definition>
        <argsstring>()</argsstring>
        <name>precise</name>
        <qualifiedname>zmbt::decor::precise::precise</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/precise_real.hpp" line="71" column="5" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/precise_real.hpp" bodystart="71" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="structzmbt_1_1decor_1_1precise_1a0ac5764eff82aa6017fc7258169f7cbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>zmbt::decor::precise&lt; VT &gt;::precise</definition>
        <argsstring>(precise const &amp;)=default</argsstring>
        <name>precise</name>
        <qualifiedname>zmbt::decor::precise::precise</qualifiedname>
        <param>
          <type><ref refid="structzmbt_1_1decor_1_1precise" kindref="compound">precise</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/precise_real.hpp" line="72" column="5"/>
      </memberdef>
      <memberdef kind="function" id="structzmbt_1_1decor_1_1precise_1ac8c8f58608847983a69fe63e865523e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>zmbt::decor::precise&lt; VT &gt;::precise</definition>
        <argsstring>(precise &amp;&amp;)=default</argsstring>
        <name>precise</name>
        <qualifiedname>zmbt::decor::precise::precise</qualifiedname>
        <param>
          <type><ref refid="structzmbt_1_1decor_1_1precise" kindref="compound">precise</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/precise_real.hpp" line="73" column="5"/>
      </memberdef>
      <memberdef kind="function" id="structzmbt_1_1decor_1_1precise_1a593bd8a87c6a5a3ef57991afcda9edf6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structzmbt_1_1decor_1_1precise" kindref="compound">precise</ref> &amp;</type>
        <definition>precise &amp; zmbt::decor::precise&lt; VT &gt;::operator=</definition>
        <argsstring>(precise const &amp;)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>zmbt::decor::precise::operator=</qualifiedname>
        <param>
          <type><ref refid="structzmbt_1_1decor_1_1precise" kindref="compound">precise</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/precise_real.hpp" line="74" column="13"/>
      </memberdef>
      <memberdef kind="function" id="structzmbt_1_1decor_1_1precise_1ad9ba2ab67eb27e8694ee86ac2afc7a20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structzmbt_1_1decor_1_1precise" kindref="compound">precise</ref> &amp;</type>
        <definition>precise &amp; zmbt::decor::precise&lt; VT &gt;::operator=</definition>
        <argsstring>(precise &amp;&amp;)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>zmbt::decor::precise::operator=</qualifiedname>
        <param>
          <type><ref refid="structzmbt_1_1decor_1_1precise" kindref="compound">precise</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/precise_real.hpp" line="75" column="13"/>
      </memberdef>
      <memberdef kind="function" id="structzmbt_1_1decor_1_1precise_1a4ee3f1630c8b31f1f03bcb1c0c1d3a66" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>zmbt::decor::precise&lt; VT &gt;::precise</definition>
        <argsstring>(decorated_type v)</argsstring>
        <name>precise</name>
        <qualifiedname>zmbt::decor::precise::precise</qualifiedname>
        <param>
          <type><ref refid="structzmbt_1_1decor_1_1precise_1a47f33a7600cf967a4e3ecc49b8d877c6" kindref="member">decorated_type</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/precise_real.hpp" line="142" column="14" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/precise_real.hpp" bodystart="142" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="structzmbt_1_1decor_1_1precise_1a4362b0916bcd621c20bdeedfccc8131c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class</type>
            <defval>std::enable_if_t&lt;std::is_arithmetic&lt;T&gt;::value&gt;</defval>
          </param>
        </templateparamlist>
        <type></type>
        <definition>zmbt::decor::precise&lt; VT &gt;::precise</definition>
        <argsstring>(T const v)</argsstring>
        <name>precise</name>
        <qualifiedname>zmbt::decor::precise::precise</qualifiedname>
        <param>
          <type>T const</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/precise_real.hpp" line="145" column="5" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/precise_real.hpp" bodystart="145" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="structzmbt_1_1decor_1_1precise_1a278bbf52e52b0167f084fae567d16b04" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class</type>
            <defval>std::enable_if_t&lt;std::is_arithmetic&lt;T&gt;::value&gt;</defval>
          </param>
        </templateparamlist>
        <type><ref refid="structzmbt_1_1decor_1_1precise" kindref="compound">precise</ref> &amp;</type>
        <definition>precise &amp; zmbt::decor::precise&lt; VT &gt;::operator=</definition>
        <argsstring>(T const v)</argsstring>
        <name>operator=</name>
        <qualifiedname>zmbt::decor::precise::operator=</qualifiedname>
        <param>
          <type>T const</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/precise_real.hpp" line="150" column="13" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/precise_real.hpp" bodystart="150" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="structzmbt_1_1decor_1_1precise_1a43e0339319a2b8b5835e6226921a9e78" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>zmbt::decor::precise&lt; VT &gt;::precise</definition>
        <argsstring>(precise&lt; T &gt; other)</argsstring>
        <name>precise</name>
        <qualifiedname>zmbt::decor::precise::precise</qualifiedname>
        <param>
          <type><ref refid="structzmbt_1_1decor_1_1precise" kindref="compound">precise</ref>&lt; T &gt;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/precise_real.hpp" line="158" column="5" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/precise_real.hpp" bodystart="158" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="structzmbt_1_1decor_1_1precise_1ac2c2c832a1ff7a89a98417a52fd4743a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structzmbt_1_1decor_1_1precise" kindref="compound">precise</ref> &amp;</type>
        <definition>precise &amp; zmbt::decor::precise&lt; VT &gt;::operator=</definition>
        <argsstring>(precise&lt; T &gt; other)</argsstring>
        <name>operator=</name>
        <qualifiedname>zmbt::decor::precise::operator=</qualifiedname>
        <param>
          <type><ref refid="structzmbt_1_1decor_1_1precise" kindref="compound">precise</ref>&lt; T &gt;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/precise_real.hpp" line="163" column="13" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/precise_real.hpp" bodystart="163" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="structzmbt_1_1decor_1_1precise_1a2352e77c676e8860d0a6794f9f657b7d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>zmbt::decor::precise&lt; VT &gt;::precise</definition>
        <argsstring>(boost::json::string_view str)</argsstring>
        <name>precise</name>
        <qualifiedname>zmbt::decor::precise::precise</qualifiedname>
        <param>
          <type>boost::json::string_view</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Construct value from string. Hex literals are supported. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/precise_real.hpp" line="170" column="5" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/precise_real.hpp" bodystart="170" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="structzmbt_1_1decor_1_1precise_1aac0d14a86895b7d177deae05e7450c1d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structzmbt_1_1decor_1_1precise" kindref="compound">precise</ref> &amp;</type>
        <definition>precise &amp; zmbt::decor::precise&lt; VT &gt;::operator=</definition>
        <argsstring>(boost::json::string_view str)</argsstring>
        <name>operator=</name>
        <qualifiedname>zmbt::decor::precise::operator=</qualifiedname>
        <param>
          <type>boost::json::string_view</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/precise_real.hpp" line="174" column="13" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/precise_real.hpp" bodystart="174" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="structzmbt_1_1decor_1_1precise_1a81904e90a57ae5b0cb9b594064ed766f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structzmbt_1_1decor_1_1precise_1a47f33a7600cf967a4e3ecc49b8d877c6" kindref="member">decorated_type</ref></type>
        <definition>decorated_type zmbt::decor::precise&lt; VT &gt;::value</definition>
        <argsstring>() const</argsstring>
        <name>value</name>
        <qualifiedname>zmbt::decor::precise::value</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/precise_real.hpp" line="180" column="20" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/precise_real.hpp" bodystart="180" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="structzmbt_1_1decor_1_1precise_1a217a713bef8e7168387cb07e18587317" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool zmbt::decor::precise&lt; VT &gt;::operator&lt;</definition>
        <argsstring>(precise other) const</argsstring>
        <name>operator&lt;</name>
        <qualifiedname>zmbt::decor::precise::operator&lt;</qualifiedname>
        <param>
          <type><ref refid="structzmbt_1_1decor_1_1precise" kindref="compound">precise</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/precise_real.hpp" line="185" column="5" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/precise_real.hpp" bodystart="185" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="structzmbt_1_1decor_1_1precise_1a2951dd192ac0826a97205da095b33e15" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool zmbt::decor::precise&lt; VT &gt;::operator&lt;</definition>
        <argsstring>(boost::json::string_view str) const</argsstring>
        <name>operator&lt;</name>
        <qualifiedname>zmbt::decor::precise::operator&lt;</qualifiedname>
        <param>
          <type>boost::json::string_view</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/precise_real.hpp" line="190" column="5" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/precise_real.hpp" bodystart="190" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="structzmbt_1_1decor_1_1precise_1ad12aa633190aad3fb99d35eba93201e9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool zmbt::decor::precise&lt; VT &gt;::operator==</definition>
        <argsstring>(precise other) const</argsstring>
        <name>operator==</name>
        <qualifiedname>zmbt::decor::precise::operator==</qualifiedname>
        <param>
          <type><ref refid="structzmbt_1_1decor_1_1precise" kindref="compound">precise</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/precise_real.hpp" line="195" column="10" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/precise_real.hpp" bodystart="195" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="structzmbt_1_1decor_1_1precise_1a57d0e83729f95e212758f5f7ff5b49b8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool zmbt::decor::precise&lt; VT &gt;::operator==</definition>
        <argsstring>(boost::json::string_view str) const</argsstring>
        <name>operator==</name>
        <qualifiedname>zmbt::decor::precise::operator==</qualifiedname>
        <param>
          <type>boost::json::string_view</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/precise_real.hpp" line="200" column="10" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/precise_real.hpp" bodystart="200" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="structzmbt_1_1decor_1_1precise_1a230233ae666285539ae437f1e7fd8617" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>zmbt::decor::precise&lt; VT &gt;::operator decorated_type</definition>
        <argsstring>() const</argsstring>
        <name>operator decorated_type</name>
        <qualifiedname>zmbt::decor::precise::operator decorated_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/precise_real.hpp" line="206" column="5" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/precise_real.hpp" bodystart="206" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="structzmbt_1_1decor_1_1precise_1a843d490ed0007fad897ca403f307fa14" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string zmbt::decor::precise&lt; VT &gt;::stringify</definition>
        <argsstring>() const</argsstring>
        <name>stringify</name>
        <qualifiedname>zmbt::decor::precise::stringify</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/precise_real.hpp" line="211" column="17" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/precise_real.hpp" bodystart="211" bodyend="216"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-func">
      <memberdef kind="function" id="structzmbt_1_1decor_1_1precise_1a85e244a54ef67b35078c833e162d4e98" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structzmbt_1_1decor_1_1precise_1a47f33a7600cf967a4e3ecc49b8d877c6" kindref="member">decorated_type</ref></type>
        <definition>static decorated_type zmbt::decor::precise&lt; VT &gt;::validate</definition>
        <argsstring>(T init_value)</argsstring>
        <name>validate</name>
        <qualifiedname>zmbt::decor::precise::validate</qualifiedname>
        <param>
          <type>T</type>
          <declname>init_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/precise_real.hpp" line="81" column="27" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/precise_real.hpp" bodystart="81" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="structzmbt_1_1decor_1_1precise_1aae1de01a15eccc06e023a8e14e2fa8d4" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structzmbt_1_1decor_1_1precise_1a47f33a7600cf967a4e3ecc49b8d877c6" kindref="member">decorated_type</ref></type>
        <definition>static decorated_type zmbt::decor::precise&lt; VT &gt;::validate_str_as</definition>
        <argsstring>(boost::json::string_view str)</argsstring>
        <name>validate_str_as</name>
        <qualifiedname>zmbt::decor::precise::validate_str_as</qualifiedname>
        <param>
          <type>boost::json::string_view</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/precise_real.hpp" line="91" column="27" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/precise_real.hpp" bodystart="91" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="structzmbt_1_1decor_1_1precise_1aec117c4fe5eb65c98eb5b7813b2a4d2c" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structzmbt_1_1decor_1_1precise_1a47f33a7600cf967a4e3ecc49b8d877c6" kindref="member">decorated_type</ref></type>
        <definition>static decorated_type zmbt::decor::precise&lt; VT &gt;::validate_str</definition>
        <argsstring>(boost::json::string_view str)</argsstring>
        <name>validate_str</name>
        <qualifiedname>zmbt::decor::precise::validate_str</qualifiedname>
        <param>
          <type>boost::json::string_view</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/precise_real.hpp" line="110" column="27" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/precise_real.hpp" bodystart="110" bodyend="138"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Type decorator for floating point numbers. Throws on precision loss in runtime. </para>
    </briefdescription>
    <detaileddescription>
<para>The class will ensure exact value conversion between floating point types of different precision on construction and assignment. In addition to handling the f23 vs f63, this class also can be constructed from string literals, enabling support for hex representation. </para>
    </detaileddescription>
    <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/precise_real.hpp" line="60" column="1" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/precise_real.hpp" bodystart="61" bodyend="220"/>
    <listofallmembers>
      <member refid="structzmbt_1_1decor_1_1precise_1a47f33a7600cf967a4e3ecc49b8d877c6" prot="public" virt="non-virtual"><scope>zmbt::decor::precise</scope><name>decorated_type</name></member>
      <member refid="structzmbt_1_1decor_1_1precise_1a230233ae666285539ae437f1e7fd8617" prot="public" virt="non-virtual"><scope>zmbt::decor::precise</scope><name>operator decorated_type</name></member>
      <member refid="structzmbt_1_1decor_1_1precise_1a217a713bef8e7168387cb07e18587317" prot="public" virt="non-virtual"><scope>zmbt::decor::precise</scope><name>operator&lt;</name></member>
      <member refid="structzmbt_1_1decor_1_1precise_1a2951dd192ac0826a97205da095b33e15" prot="public" virt="non-virtual"><scope>zmbt::decor::precise</scope><name>operator&lt;</name></member>
      <member refid="structzmbt_1_1decor_1_1precise_1a593bd8a87c6a5a3ef57991afcda9edf6" prot="public" virt="non-virtual"><scope>zmbt::decor::precise</scope><name>operator=</name></member>
      <member refid="structzmbt_1_1decor_1_1precise_1ad9ba2ab67eb27e8694ee86ac2afc7a20" prot="public" virt="non-virtual"><scope>zmbt::decor::precise</scope><name>operator=</name></member>
      <member refid="structzmbt_1_1decor_1_1precise_1a278bbf52e52b0167f084fae567d16b04" prot="public" virt="non-virtual"><scope>zmbt::decor::precise</scope><name>operator=</name></member>
      <member refid="structzmbt_1_1decor_1_1precise_1ac2c2c832a1ff7a89a98417a52fd4743a" prot="public" virt="non-virtual"><scope>zmbt::decor::precise</scope><name>operator=</name></member>
      <member refid="structzmbt_1_1decor_1_1precise_1aac0d14a86895b7d177deae05e7450c1d" prot="public" virt="non-virtual"><scope>zmbt::decor::precise</scope><name>operator=</name></member>
      <member refid="structzmbt_1_1decor_1_1precise_1ad12aa633190aad3fb99d35eba93201e9" prot="public" virt="non-virtual"><scope>zmbt::decor::precise</scope><name>operator==</name></member>
      <member refid="structzmbt_1_1decor_1_1precise_1a57d0e83729f95e212758f5f7ff5b49b8" prot="public" virt="non-virtual"><scope>zmbt::decor::precise</scope><name>operator==</name></member>
      <member refid="structzmbt_1_1decor_1_1precise_1a24fae16eb3113fc6f402fd582f710a29" prot="public" virt="non-virtual"><scope>zmbt::decor::precise</scope><name>precise</name></member>
      <member refid="structzmbt_1_1decor_1_1precise_1a0ac5764eff82aa6017fc7258169f7cbc" prot="public" virt="non-virtual"><scope>zmbt::decor::precise</scope><name>precise</name></member>
      <member refid="structzmbt_1_1decor_1_1precise_1ac8c8f58608847983a69fe63e865523e7" prot="public" virt="non-virtual"><scope>zmbt::decor::precise</scope><name>precise</name></member>
      <member refid="structzmbt_1_1decor_1_1precise_1a4ee3f1630c8b31f1f03bcb1c0c1d3a66" prot="public" virt="non-virtual"><scope>zmbt::decor::precise</scope><name>precise</name></member>
      <member refid="structzmbt_1_1decor_1_1precise_1a4362b0916bcd621c20bdeedfccc8131c" prot="public" virt="non-virtual"><scope>zmbt::decor::precise</scope><name>precise</name></member>
      <member refid="structzmbt_1_1decor_1_1precise_1a43e0339319a2b8b5835e6226921a9e78" prot="public" virt="non-virtual"><scope>zmbt::decor::precise</scope><name>precise</name></member>
      <member refid="structzmbt_1_1decor_1_1precise_1a2352e77c676e8860d0a6794f9f657b7d" prot="public" virt="non-virtual"><scope>zmbt::decor::precise</scope><name>precise</name></member>
      <member refid="structzmbt_1_1decor_1_1precise_1a843d490ed0007fad897ca403f307fa14" prot="public" virt="non-virtual"><scope>zmbt::decor::precise</scope><name>stringify</name></member>
      <member refid="structzmbt_1_1decor_1_1precise_1a85e244a54ef67b35078c833e162d4e98" prot="private" virt="non-virtual"><scope>zmbt::decor::precise</scope><name>validate</name></member>
      <member refid="structzmbt_1_1decor_1_1precise_1aec117c4fe5eb65c98eb5b7813b2a4d2c" prot="private" virt="non-virtual"><scope>zmbt::decor::precise</scope><name>validate_str</name></member>
      <member refid="structzmbt_1_1decor_1_1precise_1aae1de01a15eccc06e023a8e14e2fa8d4" prot="private" virt="non-virtual"><scope>zmbt::decor::precise</scope><name>validate_str_as</name></member>
      <member refid="structzmbt_1_1decor_1_1precise_1a81904e90a57ae5b0cb9b594064ed766f" prot="public" virt="non-virtual"><scope>zmbt::decor::precise</scope><name>value</name></member>
      <member refid="structzmbt_1_1decor_1_1precise_1adf5a788396bdc7284877eb18292e6d6a" prot="private" virt="non-virtual"><scope>zmbt::decor::precise</scope><name>value_</name></member>
      <member refid="structzmbt_1_1decor_1_1precise_1a7657dcebc3f1dd2e66c6021a5b5d8a84" prot="public" virt="non-virtual"><scope>zmbt::decor::precise</scope><name>~precise</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
