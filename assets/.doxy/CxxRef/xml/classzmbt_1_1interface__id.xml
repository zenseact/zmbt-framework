<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classzmbt_1_1interface__id" kind="class" language="C++" prot="public">
    <compoundname>zmbt::interface_id</compoundname>
    <basecompoundref refid="classzmbt_1_1entity__id" prot="public" virt="non-virtual">zmbt::entity_id</basecompoundref>
    <includes refid="interface__id_8hpp" local="no">interface_id.hpp</includes>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classzmbt_1_1interface__id_1a92d5d0f6bdf3c182f6e6d51123e909f9" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Interface</type>
          </param>
        </templateparamlist>
        <type>boost::json::string</type>
        <definition>boost::json::string zmbt::interface_id::ifc_addr</definition>
        <argsstring>(Interface const &amp;ifc)</argsstring>
        <name>ifc_addr</name>
        <qualifiedname>zmbt::interface_id::ifc_addr</qualifiedname>
        <param>
          <type>Interface const &amp;</type>
          <declname>ifc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/core/interface_id.hpp" line="35" column="25" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/core/interface_id.hpp" bodystart="35" bodyend="96"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classzmbt_1_1interface__id_1ac6bd0fa8334f19cd8ca9529ccfc66b69" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Interface</type>
          </param>
          <param>
            <type>class</type>
            <defval>mp_if&lt;is_ifc_handle&lt;Interface const&amp;&gt;, void&gt;</defval>
          </param>
        </templateparamlist>
        <type></type>
        <definition>zmbt::interface_id::interface_id</definition>
        <argsstring>(Interface const &amp;ifc)</argsstring>
        <name>interface_id</name>
        <qualifiedname>zmbt::interface_id::interface_id</qualifiedname>
        <param>
          <type>Interface const &amp;</type>
          <declname>ifc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/core/interface_id.hpp" line="107" column="5" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/core/interface_id.hpp" bodystart="107" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classzmbt_1_1interface__id_1a5cae90111603d42e6dcde07de9bb5647" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>zmbt::entity_id::entity_id</definition>
        <argsstring>()=default</argsstring>
        <name>entity_id</name>
        <qualifiedname>zmbt::interface_id::entity_id</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/core/interface_id.hpp" line="101" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classzmbt_1_1interface__id_1abe5a4a5871d7fb072a7b12069f049de7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>zmbt::entity_id::entity_id</definition>
        <argsstring>(boost::json::string_view key, std::type_index type_index)</argsstring>
        <name>entity_id</name>
        <qualifiedname>zmbt::interface_id::entity_id</qualifiedname>
        <param>
          <type>boost::json::string_view</type>
          <declname>key</declname>
        </param>
        <param>
          <type>std::type_index</type>
          <declname>type_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/core/interface_id.hpp" line="101" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classzmbt_1_1interface__id_1ac7d8b4b07b0453edf28d4e089f1beb79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>zmbt::entity_id::entity_id</definition>
        <argsstring>(boost::json::string_view key, std::size_t type_index_hash)</argsstring>
        <name>entity_id</name>
        <qualifiedname>zmbt::interface_id::entity_id</qualifiedname>
        <param>
          <type>boost::json::string_view</type>
          <declname>key</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>type_index_hash</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/core/interface_id.hpp" line="101" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classzmbt_1_1interface__id_1ac35fc46cbc2b271a1dc00017de090c78" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>zmbt::entity_id::entity_id</definition>
        <argsstring>(boost::json::array const &amp;str)</argsstring>
        <name>entity_id</name>
        <qualifiedname>zmbt::interface_id::entity_id</qualifiedname>
        <param>
          <type>boost::json::array const &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/core/interface_id.hpp" line="101" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classzmbt_1_1interface__id_1a0c0bd15a3af10aa6cce06e6543933d2b" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>zmbt::entity_id::entity_id</definition>
        <argsstring>(boost::json::value const &amp;val)</argsstring>
        <name>entity_id</name>
        <qualifiedname>zmbt::interface_id::entity_id</qualifiedname>
        <param>
          <type>boost::json::value const &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/core/interface_id.hpp" line="101" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classzmbt_1_1interface__id_1ab524192ea91687820ab7e9df1f620a87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>zmbt::entity_id::entity_id</definition>
        <argsstring>(entity_id const &amp;)=default</argsstring>
        <name>entity_id</name>
        <qualifiedname>zmbt::interface_id::entity_id</qualifiedname>
        <param>
          <type><ref refid="classzmbt_1_1entity__id" kindref="compound">entity_id</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/core/interface_id.hpp" line="101" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classzmbt_1_1interface__id_1a2baedea36abfa4f215ca4f1b5f0736dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>zmbt::entity_id::entity_id</definition>
        <argsstring>(entity_id &amp;&amp;)=default</argsstring>
        <name>entity_id</name>
        <qualifiedname>zmbt::interface_id::entity_id</qualifiedname>
        <param>
          <type><ref refid="classzmbt_1_1entity__id" kindref="compound">entity_id</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/core/interface_id.hpp" line="101" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classzmbt_1_1interface__id_1ad307d68fb825c43323e4ee76a25c85ae" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool zmbt::entity_id::operator==</definition>
        <argsstring>(entity_id const &amp;other) const</argsstring>
        <name>operator==</name>
        <qualifiedname>zmbt::interface_id::operator==</qualifiedname>
        <param>
          <type><ref refid="classzmbt_1_1entity__id" kindref="compound">entity_id</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/core/interface_id.hpp" line="103" column="5" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/core/entity_id.hpp" bodystart="65" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classzmbt_1_1interface__id_1ad534fcfd769fc4a448d83a7cca711eaa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool zmbt::entity_id::operator!=</definition>
        <argsstring>(entity_id const &amp;other) const</argsstring>
        <name>operator!=</name>
        <qualifiedname>zmbt::interface_id::operator!=</qualifiedname>
        <param>
          <type><ref refid="classzmbt_1_1entity__id" kindref="compound">entity_id</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/core/interface_id.hpp" line="104" column="5" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/core/entity_id.hpp" bodystart="68" bodyend="70"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Pointer-based interface id with type annotation. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>zmbt::entity_id</label>
        <link refid="classzmbt_1_1entity__id"/>
      </node>
      <node id="1">
        <label>zmbt::interface_id</label>
        <link refid="classzmbt_1_1interface__id"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>zmbt::entity_id</label>
        <link refid="classzmbt_1_1entity__id"/>
      </node>
      <node id="1">
        <label>zmbt::interface_id</label>
        <link refid="classzmbt_1_1interface__id"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/core/interface_id.hpp" line="31" column="1" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/core/interface_id.hpp" bodystart="31" bodyend="114"/>
    <listofallmembers>
      <member refid="classzmbt_1_1entity__id_1a0b73268023d692e74fd6ce84b61bc2d3" prot="public" virt="non-virtual"><scope>zmbt::interface_id</scope><name>annotation</name></member>
      <member refid="classzmbt_1_1interface__id_1a5cae90111603d42e6dcde07de9bb5647" prot="public" virt="non-virtual"><scope>zmbt::interface_id</scope><name>entity_id</name></member>
      <member refid="classzmbt_1_1interface__id_1abe5a4a5871d7fb072a7b12069f049de7" prot="public" virt="non-virtual"><scope>zmbt::interface_id</scope><name>entity_id</name></member>
      <member refid="classzmbt_1_1interface__id_1ac7d8b4b07b0453edf28d4e089f1beb79" prot="public" virt="non-virtual"><scope>zmbt::interface_id</scope><name>entity_id</name></member>
      <member refid="classzmbt_1_1interface__id_1ac35fc46cbc2b271a1dc00017de090c78" prot="public" virt="non-virtual"><scope>zmbt::interface_id</scope><name>entity_id</name></member>
      <member refid="classzmbt_1_1interface__id_1a0c0bd15a3af10aa6cce06e6543933d2b" prot="public" virt="non-virtual"><scope>zmbt::interface_id</scope><name>entity_id</name></member>
      <member refid="classzmbt_1_1interface__id_1ab524192ea91687820ab7e9df1f620a87" prot="public" virt="non-virtual"><scope>zmbt::interface_id</scope><name>entity_id</name></member>
      <member refid="classzmbt_1_1interface__id_1a2baedea36abfa4f215ca4f1b5f0736dd" prot="public" virt="non-virtual"><scope>zmbt::interface_id</scope><name>entity_id</name></member>
      <member refid="classzmbt_1_1interface__id_1a92d5d0f6bdf3c182f6e6d51123e909f9" prot="private" virt="non-virtual"><scope>zmbt::interface_id</scope><name>ifc_addr</name></member>
      <member refid="classzmbt_1_1interface__id_1ac6bd0fa8334f19cd8ca9529ccfc66b69" prot="public" virt="non-virtual"><scope>zmbt::interface_id</scope><name>interface_id</name></member>
      <member refid="classzmbt_1_1entity__id_1a3984f0b392cf6de4b2922cbb970f5fd3" prot="public" virt="non-virtual"><scope>zmbt::interface_id</scope><name>key</name></member>
      <member refid="classzmbt_1_1interface__id_1ad534fcfd769fc4a448d83a7cca711eaa" prot="public" virt="non-virtual"><scope>zmbt::interface_id</scope><name>operator!=</name></member>
      <member refid="classzmbt_1_1entity__id_1af992a80dea8a9f0fc6905d6737539bdd" prot="public" virt="non-virtual"><scope>zmbt::interface_id</scope><name>operator=</name></member>
      <member refid="classzmbt_1_1entity__id_1afccfdde33f26a2f768d1a71c35ebda27" prot="public" virt="non-virtual"><scope>zmbt::interface_id</scope><name>operator=</name></member>
      <member refid="classzmbt_1_1entity__id_1a88d3fa085398d2dbe3ffd0fed038b65b" prot="public" virt="non-virtual"><scope>zmbt::interface_id</scope><name>operator=</name></member>
      <member refid="classzmbt_1_1entity__id_1ae0acb55123e15068e725abc0d6da0bc1" prot="public" virt="non-virtual"><scope>zmbt::interface_id</scope><name>operator=</name></member>
      <member refid="classzmbt_1_1interface__id_1ad307d68fb825c43323e4ee76a25c85ae" prot="public" virt="non-virtual"><scope>zmbt::interface_id</scope><name>operator==</name></member>
      <member refid="classzmbt_1_1entity__id_1af85308eb2151680e3d06c1134021992b" prot="public" virt="non-virtual"><scope>zmbt::interface_id</scope><name>str</name></member>
      <member refid="classzmbt_1_1entity__id_1ac7a2f2398804ae98f3533f320533e286" prot="public" virt="virtual"><scope>zmbt::interface_id</scope><name>~entity_id</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
