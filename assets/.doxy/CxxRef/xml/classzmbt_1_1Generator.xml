<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classzmbt_1_1Generator" kind="class" language="C++" prot="public">
    <compoundname>zmbt::Generator</compoundname>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classzmbt_1_1Generator_1ab9a28eff2d9ba7a06d5931c7da946c4f" prot="public" static="no">
        <type>std::shared_ptr&lt; <ref refid="classzmbt_1_1Generator" kindref="compound">Generator</ref> &gt;</type>
        <definition>using zmbt::Generator::Shared =  std::shared_ptr&lt;Generator&gt;</definition>
        <argsstring></argsstring>
        <name>Shared</name>
        <qualifiedname>zmbt::Generator::Shared</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/model/generator.hpp" line="46" column="5" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/model/generator.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classzmbt_1_1Generator_1a7849a1411daa0b2965994425983d2e05" prot="private" static="no" mutable="no">
        <type>std::atomic_uint64_t</type>
        <definition>std::atomic_uint64_t zmbt::Generator::counter_</definition>
        <argsstring></argsstring>
        <name>counter_</name>
        <qualifiedname>zmbt::Generator::counter_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/model/generator.hpp" line="22" column="26" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/model/generator.hpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classzmbt_1_1Generator_1a6baf05804ad688273afa71c1902ab1c9" prot="private" static="no" mutable="no">
        <type><ref refid="classzmbt_1_1lang_1_1Expression" kindref="compound">lang::Expression</ref></type>
        <definition>lang::Expression zmbt::Generator::expr_</definition>
        <argsstring></argsstring>
        <name>expr_</name>
        <qualifiedname>zmbt::Generator::expr_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/model/generator.hpp" line="23" column="22" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/model/generator.hpp" bodystart="23" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classzmbt_1_1Generator_1abe96cac56bccc724a8b572724869ff68" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>zmbt::Generator::Generator</definition>
        <argsstring>(boost::json::array const &amp;serialized)</argsstring>
        <name>Generator</name>
        <qualifiedname>zmbt::Generator::Generator</qualifiedname>
        <param>
          <type>boost::json::array const &amp;</type>
          <declname>serialized</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/model/generator.hpp" line="25" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classzmbt_1_1Generator_1a6b85e854e64bbbfc3682ac00ce6656b8" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>zmbt::Generator::Generator</definition>
        <argsstring>(lang::Expression const &amp;expr)</argsstring>
        <name>Generator</name>
        <qualifiedname>zmbt::Generator::Generator</qualifiedname>
        <param>
          <type><ref refid="classzmbt_1_1lang_1_1Expression" kindref="compound">lang::Expression</ref> const &amp;</type>
          <declname>expr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/model/generator.hpp" line="26" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classzmbt_1_1Generator_1a7a9abdf92ab0cdfc9333e82dc997acba" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool zmbt::Generator::is_noop</definition>
        <argsstring>() const</argsstring>
        <name>is_noop</name>
        <qualifiedname>zmbt::Generator::is_noop</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/model/generator.hpp" line="28" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classzmbt_1_1Generator_1a4aec15d34dd5dc8733a862374cd118c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::uint64_t</type>
        <definition>std::uint64_t zmbt::Generator::operator()</definition>
        <argsstring>(boost::json::value &amp;value)</argsstring>
        <name>operator()</name>
        <qualifiedname>zmbt::Generator::operator()</qualifiedname>
        <param>
          <type>boost::json::value &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Generate value and return iteration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/model/generator.hpp" line="31" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classzmbt_1_1Generator_1a289b5220d3f1a85a084434c8e63e6492" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void zmbt::Generator::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <qualifiedname>zmbt::Generator::reset</qualifiedname>
        <briefdescription>
<para>Reset atomic counter. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/model/generator.hpp" line="34" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classzmbt_1_1Generator_1acf024dcdb6c4b8f04299cf4aa5e286d5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzmbt_1_1lang_1_1Expression" kindref="compound">lang::Expression</ref> const &amp;</type>
        <definition>lang::Expression const  &amp; zmbt::Generator::expression</definition>
        <argsstring>() const</argsstring>
        <name>expression</name>
        <qualifiedname>zmbt::Generator::expression</qualifiedname>
        <briefdescription>
<para>Get underlying expression. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/model/generator.hpp" line="37" column="28"/>
      </memberdef>
      <memberdef kind="function" id="classzmbt_1_1Generator_1acbc4fa0937d2fcf84fa92f8f15e446ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzmbt_1_1Generator" kindref="compound">Generator</ref> &amp;</type>
        <definition>Generator &amp; zmbt::Generator::operator=</definition>
        <argsstring>(Generator const &amp;)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>zmbt::Generator::operator=</qualifiedname>
        <param>
          <type><ref refid="classzmbt_1_1Generator" kindref="compound">Generator</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/model/generator.hpp" line="40" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classzmbt_1_1Generator_1abfeec2196cf893d34a76b8291800215a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>zmbt::Generator::Generator</definition>
        <argsstring>(Generator const &amp;)=default</argsstring>
        <name>Generator</name>
        <qualifiedname>zmbt::Generator::Generator</qualifiedname>
        <param>
          <type><ref refid="classzmbt_1_1Generator" kindref="compound">Generator</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/model/generator.hpp" line="41" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classzmbt_1_1Generator_1aca745354be07658a01b9a5290d768a88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>zmbt::Generator::Generator</definition>
        <argsstring>(Generator &amp;&amp;)=default</argsstring>
        <name>Generator</name>
        <qualifiedname>zmbt::Generator::Generator</qualifiedname>
        <param>
          <type><ref refid="classzmbt_1_1Generator" kindref="compound">Generator</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/model/generator.hpp" line="42" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classzmbt_1_1Generator_1ae43b12079302bf8dbd490de842b32d53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzmbt_1_1Generator" kindref="compound">Generator</ref> &amp;</type>
        <definition>Generator &amp; zmbt::Generator::operator=</definition>
        <argsstring>(Generator &amp;&amp;)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>zmbt::Generator::operator=</qualifiedname>
        <param>
          <type><ref refid="classzmbt_1_1Generator" kindref="compound">Generator</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/model/generator.hpp" line="43" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classzmbt_1_1Generator_1a663367d664d353010a609253611e1dd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>zmbt::Generator::~Generator</definition>
        <argsstring>()=default</argsstring>
        <name>~Generator</name>
        <qualifiedname>zmbt::Generator::~Generator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/model/generator.hpp" line="44" column="5"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/model/generator.hpp" line="20" column="1" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/model/generator.hpp" bodystart="21" bodyend="48"/>
    <listofallmembers>
      <member refid="classzmbt_1_1Generator_1a7849a1411daa0b2965994425983d2e05" prot="private" virt="non-virtual"><scope>zmbt::Generator</scope><name>counter_</name></member>
      <member refid="classzmbt_1_1Generator_1a6baf05804ad688273afa71c1902ab1c9" prot="private" virt="non-virtual"><scope>zmbt::Generator</scope><name>expr_</name></member>
      <member refid="classzmbt_1_1Generator_1acf024dcdb6c4b8f04299cf4aa5e286d5" prot="public" virt="non-virtual"><scope>zmbt::Generator</scope><name>expression</name></member>
      <member refid="classzmbt_1_1Generator_1abe96cac56bccc724a8b572724869ff68" prot="public" virt="non-virtual"><scope>zmbt::Generator</scope><name>Generator</name></member>
      <member refid="classzmbt_1_1Generator_1a6b85e854e64bbbfc3682ac00ce6656b8" prot="public" virt="non-virtual"><scope>zmbt::Generator</scope><name>Generator</name></member>
      <member refid="classzmbt_1_1Generator_1abfeec2196cf893d34a76b8291800215a" prot="public" virt="non-virtual"><scope>zmbt::Generator</scope><name>Generator</name></member>
      <member refid="classzmbt_1_1Generator_1aca745354be07658a01b9a5290d768a88" prot="public" virt="non-virtual"><scope>zmbt::Generator</scope><name>Generator</name></member>
      <member refid="classzmbt_1_1Generator_1a7a9abdf92ab0cdfc9333e82dc997acba" prot="public" virt="non-virtual"><scope>zmbt::Generator</scope><name>is_noop</name></member>
      <member refid="classzmbt_1_1Generator_1a4aec15d34dd5dc8733a862374cd118c2" prot="public" virt="non-virtual"><scope>zmbt::Generator</scope><name>operator()</name></member>
      <member refid="classzmbt_1_1Generator_1acbc4fa0937d2fcf84fa92f8f15e446ab" prot="public" virt="non-virtual"><scope>zmbt::Generator</scope><name>operator=</name></member>
      <member refid="classzmbt_1_1Generator_1ae43b12079302bf8dbd490de842b32d53" prot="public" virt="non-virtual"><scope>zmbt::Generator</scope><name>operator=</name></member>
      <member refid="classzmbt_1_1Generator_1a289b5220d3f1a85a084434c8e63e6492" prot="public" virt="non-virtual"><scope>zmbt::Generator</scope><name>reset</name></member>
      <member refid="classzmbt_1_1Generator_1ab9a28eff2d9ba7a06d5931c7da946c4f" prot="public" virt="non-virtual"><scope>zmbt::Generator</scope><name>Shared</name></member>
      <member refid="classzmbt_1_1Generator_1a663367d664d353010a609253611e1dd5" prot="public" virt="non-virtual"><scope>zmbt::Generator</scope><name>~Generator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
