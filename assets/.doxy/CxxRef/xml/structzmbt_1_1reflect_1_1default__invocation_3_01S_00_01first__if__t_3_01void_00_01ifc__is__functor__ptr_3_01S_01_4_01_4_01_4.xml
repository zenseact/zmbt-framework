<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="structzmbt_1_1reflect_1_1default__invocation_3_01S_00_01first__if__t_3_01void_00_01ifc__is__functor__ptr_3_01S_01_4_01_4_01_4" kind="struct" language="C++" prot="public">
    <compoundname>zmbt::reflect::default_invocation&lt; S, first_if_t&lt; void, ifc_is_functor_ptr&lt; S &gt; &gt; &gt;</compoundname>
    <templateparamlist>
      <param>
        <type>class S</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structzmbt_1_1reflect_1_1default__invocation_3_01S_00_01first__if__t_3_01void_00_01ifc__is__functor__ptr_3_01S_01_4_01_4_01_4_1afa80e4ee607c10666529ec130bc01baa" prot="public" static="no">
        <type>S</type>
        <definition>using zmbt::reflect::default_invocation&lt; S, first_if_t&lt; void, ifc_is_functor_ptr&lt; S &gt; &gt; &gt;::type =  S</definition>
        <argsstring></argsstring>
        <name>type</name>
        <qualifiedname>zmbt::reflect::default_invocation&lt; S, first_if_t&lt; void, ifc_is_functor_ptr&lt; S &gt; &gt; &gt;::type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/reflect/invocation.hpp" line="133" column="5" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/reflect/invocation.hpp" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structzmbt_1_1reflect_1_1default__invocation_3_01S_00_01first__if__t_3_01void_00_01ifc__is__functor__ptr_3_01S_01_4_01_4_01_4_1a155bcd4f63c0739820bb55f0f9033e89" prot="public" static="no">
        <type>ifc_host_t&lt; type &gt;</type>
        <definition>using zmbt::reflect::default_invocation&lt; S, first_if_t&lt; void, ifc_is_functor_ptr&lt; S &gt; &gt; &gt;::host_t =  ifc_host_t&lt;type&gt;</definition>
        <argsstring></argsstring>
        <name>host_t</name>
        <qualifiedname>zmbt::reflect::default_invocation&lt; S, first_if_t&lt; void, ifc_is_functor_ptr&lt; S &gt; &gt; &gt;::host_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/reflect/invocation.hpp" line="134" column="6" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/reflect/invocation.hpp" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structzmbt_1_1reflect_1_1default__invocation_3_01S_00_01first__if__t_3_01void_00_01ifc__is__functor__ptr_3_01S_01_4_01_4_01_4_1a3167a590ec609126d8b008a58855b154" prot="public" static="no">
        <type>ifc_return_t&lt; type &gt;</type>
        <definition>using zmbt::reflect::default_invocation&lt; S, first_if_t&lt; void, ifc_is_functor_ptr&lt; S &gt; &gt; &gt;::return_t =  ifc_return_t&lt;type&gt;</definition>
        <argsstring></argsstring>
        <name>return_t</name>
        <qualifiedname>zmbt::reflect::default_invocation&lt; S, first_if_t&lt; void, ifc_is_functor_ptr&lt; S &gt; &gt; &gt;::return_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/reflect/invocation.hpp" line="134" column="20" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/reflect/invocation.hpp" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structzmbt_1_1reflect_1_1default__invocation_3_01S_00_01first__if__t_3_01void_00_01ifc__is__functor__ptr_3_01S_01_4_01_4_01_4_1a86b5faccf6b79f989c753205a1b12dd2" prot="public" static="no">
        <type>ifc_args_t&lt; type &gt;</type>
        <definition>using zmbt::reflect::default_invocation&lt; S, first_if_t&lt; void, ifc_is_functor_ptr&lt; S &gt; &gt; &gt;::args_t =  ifc_args_t&lt;type&gt;</definition>
        <argsstring></argsstring>
        <name>args_t</name>
        <qualifiedname>zmbt::reflect::default_invocation&lt; S, first_if_t&lt; void, ifc_is_functor_ptr&lt; S &gt; &gt; &gt;::args_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/reflect/invocation.hpp" line="134" column="36" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/reflect/invocation.hpp" bodystart="134" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structzmbt_1_1reflect_1_1default__invocation_3_01S_00_01first__if__t_3_01void_00_01ifc__is__functor__ptr_3_01S_01_4_01_4_01_4_1ac0ef6003f2886e5fa457fb5842c1f018" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>return_t</type>
        <definition>static return_t zmbt::reflect::default_invocation&lt; S, first_if_t&lt; void, ifc_is_functor_ptr&lt; S &gt; &gt; &gt;::apply</definition>
        <argsstring>(host_t, type ifc, args_t args)</argsstring>
        <name>apply</name>
        <qualifiedname>zmbt::reflect::default_invocation&lt; S, first_if_t&lt; void, ifc_is_functor_ptr&lt; S &gt; &gt; &gt;::apply</qualifiedname>
        <param>
          <type>host_t</type>
        </param>
        <param>
          <type>type</type>
          <declname>ifc</declname>
        </param>
        <param>
          <type>args_t</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/reflect/invocation.hpp" line="136" column="21" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/reflect/invocation.hpp" bodystart="136" bodyend="140"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/reflect/invocation.hpp" line="131" column="1" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/reflect/invocation.hpp" bodystart="132" bodyend="141"/>
    <listofallmembers>
      <member refid="structzmbt_1_1reflect_1_1default__invocation_3_01S_00_01first__if__t_3_01void_00_01ifc__is__functor__ptr_3_01S_01_4_01_4_01_4_1ac0ef6003f2886e5fa457fb5842c1f018" prot="public" virt="non-virtual"><scope>zmbt::reflect::default_invocation&lt; S, first_if_t&lt; void, ifc_is_functor_ptr&lt; S &gt; &gt; &gt;</scope><name>apply</name></member>
      <member refid="structzmbt_1_1reflect_1_1default__invocation_3_01S_00_01first__if__t_3_01void_00_01ifc__is__functor__ptr_3_01S_01_4_01_4_01_4_1a86b5faccf6b79f989c753205a1b12dd2" prot="public" virt="non-virtual"><scope>zmbt::reflect::default_invocation&lt; S, first_if_t&lt; void, ifc_is_functor_ptr&lt; S &gt; &gt; &gt;</scope><name>args_t</name></member>
      <member refid="structzmbt_1_1reflect_1_1default__invocation_3_01S_00_01first__if__t_3_01void_00_01ifc__is__functor__ptr_3_01S_01_4_01_4_01_4_1a155bcd4f63c0739820bb55f0f9033e89" prot="public" virt="non-virtual"><scope>zmbt::reflect::default_invocation&lt; S, first_if_t&lt; void, ifc_is_functor_ptr&lt; S &gt; &gt; &gt;</scope><name>host_t</name></member>
      <member refid="structzmbt_1_1reflect_1_1default__invocation_3_01S_00_01first__if__t_3_01void_00_01ifc__is__functor__ptr_3_01S_01_4_01_4_01_4_1a3167a590ec609126d8b008a58855b154" prot="public" virt="non-virtual"><scope>zmbt::reflect::default_invocation&lt; S, first_if_t&lt; void, ifc_is_functor_ptr&lt; S &gt; &gt; &gt;</scope><name>return_t</name></member>
      <member refid="structzmbt_1_1reflect_1_1default__invocation_3_01S_00_01first__if__t_3_01void_00_01ifc__is__functor__ptr_3_01S_01_4_01_4_01_4_1afa80e4ee607c10666529ec130bc01baa" prot="public" virt="non-virtual"><scope>zmbt::reflect::default_invocation&lt; S, first_if_t&lt; void, ifc_is_functor_ptr&lt; S &gt; &gt; &gt;</scope><name>type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
