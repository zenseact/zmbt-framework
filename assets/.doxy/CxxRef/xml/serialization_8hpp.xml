<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="serialization_8hpp" kind="file" language="C++">
    <compoundname>serialization.hpp</compoundname>
    <includes local="no">type_traits</includes>
    <includes local="no">boost/json.hpp</includes>
    <includes refid="preprocessor_8hpp" local="yes">zmbt/core/preprocessor.hpp</includes>
    <includes refid="core_8hpp" local="yes">zmbt/core.hpp</includes>
    <includes refid="ducktyping__traits__pp_8hpp" local="yes">ducktyping_traits_pp.hpp</includes>
    <includes refid="signal__traits_8hpp" local="yes">signal_traits.hpp</includes>
    <includes refid="serialization__defaults_8hpp" local="yes">serialization_defaults.hpp</includes>
    <includedby refid="api__signatures_8hpp" local="yes">zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/expr/api_signatures.hpp</includedby>
    <includedby refid="environment_8hpp" local="no">zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/model/environment.hpp</includedby>
    <includedby refid="param__transform_8hpp" local="no">zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/model/param_transform.hpp</includedby>
    <includedby refid="reflect_8hpp" local="yes">zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/reflect.hpp</includedby>
    <includedby refid="prototypes_8hpp" local="yes">zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/reflect/prototypes.hpp</includedby>
    <includedby refid="serialization__defaults_8hpp" local="yes">zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/reflect/serialization_defaults.hpp</includedby>
    <incdepgraph>
      <node id="6">
        <label>zmbt/core.hpp</label>
        <link refid="core_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>core/aliases.hpp</label>
        <link refid="aliases_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>core/entity_id.hpp</label>
        <link refid="entity__id_8hpp"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>core/exceptions.hpp</label>
        <link refid="core_2exceptions_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>core/file_parser.hpp</label>
        <link refid="file__parser_8hpp"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>format_string.hpp</label>
        <link refid="format__string_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>core/generic_traits.hpp</label>
        <link refid="generic__traits_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>core/get_info.hpp</label>
        <link refid="get__info_8hpp"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>core/interface_id.hpp</label>
        <link refid="interface__id_8hpp"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>core/interface_traits.hpp</label>
        <link refid="interface__traits_8hpp"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>core/json_iter.hpp</label>
        <link refid="json__iter_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>core/json_node.hpp</label>
        <link refid="json__node_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>core/json_number_cast.hpp</label>
        <link refid="json__number__cast_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>core/json_pretty_print.hpp</label>
        <link refid="json__pretty__print_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>core/json_traverse.hpp</label>
        <link refid="json__traverse_8hpp"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>core/object_id.hpp</label>
        <link refid="object__id_8hpp"/>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>core/operator_traits.hpp</label>
        <link refid="operator__traits_8hpp"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>zmbt/core/preprocessor.hpp</label>
        <link refid="preprocessor_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>core/shared_resource.hpp</label>
        <link refid="shared__resource_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>core/slice.hpp</label>
        <link refid="slice_8hpp"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>core/tuple_conversion.hpp</label>
        <link refid="tuple__conversion_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>core/tuple_exchange.hpp</label>
        <link refid="tuple__exchange_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>core/tuple_indexator.hpp</label>
        <link refid="tuple__indexator_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>type_info.hpp</label>
        <link refid="type__info_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>core/type_tag.hpp</label>
        <link refid="type__tag_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>ducktyping_traits_pp.hpp</label>
        <link refid="ducktyping__traits__pp_8hpp"/>
      </node>
      <node id="1">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/reflect/serialization.hpp</label>
        <link refid="serialization_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>serialization_defaults.hpp</label>
        <link refid="serialization__defaults_8hpp"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>signal_traits.hpp</label>
        <link refid="signal__traits_8hpp"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>array</label>
      </node>
      <node id="9">
        <label>boost/callable_traits.hpp</label>
      </node>
      <node id="57">
        <label>boost/describe.hpp</label>
      </node>
      <node id="3">
        <label>boost/json.hpp</label>
      </node>
      <node id="10">
        <label>boost/mp11.hpp</label>
      </node>
      <node id="52">
        <label>boost/mp11/tuple.hpp</label>
      </node>
      <node id="5">
        <label>boost/preprocessor.hpp</label>
      </node>
      <node id="12">
        <label>boost/throw_exception.hpp</label>
      </node>
      <node id="17">
        <label>boost/type_index.hpp</label>
      </node>
      <node id="40">
        <label>boost/type_traits.hpp</label>
      </node>
      <node id="58">
        <label>complex</label>
      </node>
      <node id="27">
        <label>cstddef</label>
      </node>
      <node id="47">
        <label>cstdint</label>
      </node>
      <node id="50">
        <label>cstring</label>
      </node>
      <node id="24">
        <label>functional</label>
      </node>
      <node id="28">
        <label>iostream</label>
      </node>
      <node id="35">
        <label>map</label>
      </node>
      <node id="29">
        <label>memory</label>
      </node>
      <node id="36">
        <label>set</label>
      </node>
      <node id="14">
        <label>string</label>
      </node>
      <node id="22">
        <label>thread</label>
      </node>
      <node id="8">
        <label>tuple</label>
      </node>
      <node id="2">
        <label>type_traits</label>
      </node>
      <node id="48">
        <label>typeindex</label>
      </node>
      <node id="51">
        <label>typeinfo</label>
      </node>
      <node id="37">
        <label>unordered_map</label>
      </node>
      <node id="38">
        <label>unordered_set</label>
      </node>
      <node id="15">
        <label>utility</label>
      </node>
      <node id="39">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="5">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zenseact-mbt.hpp</label>
        <link refid="zenseact-mbt_8hpp"/>
      </node>
      <node id="4">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/all.hpp</label>
        <link refid="all_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/api.hpp</label>
        <link refid="api_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/api/model_test.hpp</label>
        <link refid="model__test_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/api/ns.hpp</label>
        <link refid="ns_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor.hpp</label>
        <link refid="decor_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/precise_real.hpp</label>
        <link refid="precise__real_8hpp"/>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/decor/underlying.hpp</label>
        <link refid="underlying_8hpp"/>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/expr.hpp</label>
        <link refid="expr_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/expr/api.hpp</label>
        <link refid="expr_2api_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/expr/api_signatures.hpp</label>
        <link refid="api__signatures_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/expr/attributes.hpp</label>
        <link refid="attributes_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/expr/encoding.hpp</label>
        <link refid="encoding_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/expr/eval_context.hpp</label>
        <link refid="eval__context_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/expr/eval_impl.hpp</label>
        <link refid="eval__impl_8hpp"/>
      </node>
      <node id="35">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/expr/eval_params.hpp</label>
        <link refid="eval__params_8hpp"/>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/expr/eval_validator.hpp</label>
        <link refid="eval__validator_8hpp"/>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/expr/expression.hpp</label>
        <link refid="expression_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/expr/expression_grammar.hpp</label>
        <link refid="expression__grammar_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/expr/keyword.hpp</label>
        <link refid="keyword_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/expr/keyword_grammar.hpp</label>
        <link refid="keyword__grammar_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/expr/keyword_info.hpp</label>
        <link refid="keyword__info_8hpp"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/expr/lazy_param.hpp</label>
        <link refid="lazy__param_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/expr/operator.hpp</label>
        <link refid="operator_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/expr/subexpression.hpp</label>
        <link refid="subexpression_8hpp"/>
      </node>
      <node id="7">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/mapping.hpp</label>
        <link refid="mapping_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/mapping/channel_handle.hpp</label>
        <link refid="channel__handle_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/mapping/model_definition.hpp</label>
        <link refid="model__definition_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/mapping/model_definition_helper.hpp</label>
        <link refid="model__definition__helper_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/mapping/model_definition_main.hpp</label>
        <link refid="model__definition__main_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/mapping/model_definition_node.hpp</label>
        <link refid="model__definition__node_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/mapping/model_definition_states.hpp</label>
        <link refid="model__definition__states_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/mapping/model_definition_transitions.hpp</label>
        <link refid="model__definition__transitions_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/mapping/pipe_handle.hpp</label>
        <link refid="pipe__handle_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/mapping/test_diagnostics.hpp</label>
        <link refid="test__diagnostics_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/mapping/test_parameter_resolver.hpp</label>
        <link refid="test__parameter__resolver_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/model.hpp</label>
        <link refid="model_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/model/channel_kind.hpp</label>
        <link refid="channel__kind_8hpp"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/model/environment.hpp</label>
        <link refid="environment_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/model/environment_data.hpp</label>
        <link refid="environment__data_8hpp"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/model/environment_interface_record.hpp</label>
        <link refid="environment__interface__record_8hpp"/>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/model/generator.hpp</label>
        <link refid="generator_8hpp"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/model/injection_table.hpp</label>
        <link refid="injection__table_8hpp"/>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/model/output_recorder.hpp</label>
        <link refid="output__recorder_8hpp"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/model/param_transform.hpp</label>
        <link refid="param__transform_8hpp"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/model/parameter.hpp</label>
        <link refid="parameter_8hpp"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/model/permanent_data.hpp</label>
        <link refid="permanent__data_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/model/traits.hpp</label>
        <link refid="traits_8hpp"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/model/trigger.hpp</label>
        <link refid="trigger_8hpp"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/reflect.hpp</label>
        <link refid="reflect_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/reflect/prototypes.hpp</label>
        <link refid="prototypes_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/reflect/serialization.hpp</label>
        <link refid="serialization_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/reflect/serialization_defaults.hpp</label>
        <link refid="serialization__defaults_8hpp"/>
        <childnode refid="1" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structzmbt_1_1reflect_1_1serialization_3_01T_00_01detail_1_1enable__for__default__serialization_3_01T_01_4_01_4" prot="public">zmbt::reflect::serialization&lt; T, detail::enable_for_default_serialization&lt; T &gt; &gt;</innerclass>
    <innerclass refid="structzmbt_1_1reflect_1_1serialization_3_01T_00_01detail_1_1enable__for__custom__serialization_3_01T_01_4_01_4" prot="public">zmbt::reflect::serialization&lt; T, detail::enable_for_custom_serialization&lt; T &gt; &gt;</innerclass>
    <innerclass refid="structzmbt_1_1has__serialization" prot="public">zmbt::has_serialization</innerclass>
    <innernamespace refid="namespacezmbt">zmbt</innernamespace>
    <innernamespace refid="namespacezmbt_1_1reflect">zmbt::reflect</innernamespace>
    <sectiondef kind="define">
      <memberdef kind="define" id="serialization_8hpp_1aa79a61750db090f35f8afbd7b11e8983" prot="public" static="no">
        <name>ZMBT_INJECT_JSON_TAG_INVOKE</name>
        <initializer>using <ref refid="namespacezmbt_1_1reflect_1a3dfb6ab81c9456e5ddbbc023df43081e" kindref="member">zmbt::reflect::tag_invoke</ref>;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/reflect/serialization.hpp" line="21" column="9" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/reflect/serialization.hpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="serialization_8hpp_1acbbbc6704592b0bb494e3c59229253de" prot="public" static="no">
        <name>ZMBT_INJECT_OSTREAM_OPERATOR</name>
        <initializer>using zmbt::reflect::operator&lt;&lt;;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/reflect/serialization.hpp" line="22" column="9" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/reflect/serialization.hpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="serialization_8hpp_1a7b793cc2eda590142a0ebb0d3bbf06e8" prot="public" static="no">
        <name>ZMBT_INJECT_SERIALIZATION</name>
        <initializer>ZMBT_INJECT_JSON_TAG_INVOKE ZMBT_INJECT_OSTREAM_OPERATOR</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/reflect/serialization.hpp" line="23" column="9" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/reflect/serialization.hpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="serialization_8hpp_1a4ee581d8419164ba1fd054ece5242775" prot="public" static="no">
        <name>ZMBT_INJECT_JSON_TAG_INVOKE_INTO</name>
        <param><defname>...</defname></param>
        <initializer>ZMBT_PP_INJECT_CODE_INTO_NS(ZMBT_INJECT_JSON_TAG_INVOKE, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/reflect/serialization.hpp" line="26" column="9" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/reflect/serialization.hpp" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="serialization_8hpp_1a468350f8256698a252dd15fe12ff11da" prot="public" static="no">
        <name>ZMBT_INJECT_OSTREAM_OPERATOR_INTO</name>
        <param><defname>...</defname></param>
        <initializer>ZMBT_PP_INJECT_CODE_INTO_NS(ZMBT_INJECT_OSTREAM_OPERATOR, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/reflect/serialization.hpp" line="27" column="9" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/reflect/serialization.hpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="serialization_8hpp_1a680e510a26f228e0abf63e3b6c6d87da" prot="public" static="no">
        <name>ZMBT_INJECT_SERIALIZATION_INTO</name>
        <param><defname>...</defname></param>
        <initializer>ZMBT_PP_INJECT_CODE_INTO_NS(ZMBT_INJECT_SERIALIZATION, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/reflect/serialization.hpp" line="28" column="9" bodyfile="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/reflect/serialization.hpp" bodystart="28" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="copyright"><para>(c) Copyright 2022-2023 Volvo Car Corporation </para>
</simplesect>
<simplesect kind="copyright"><para>(c) Copyright 2024 Zenseact AB </para>
</simplesect>
<simplesect kind="par"><title>License</title><para>SPDX-License-Identifier: Apache-2.0 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZMBT_CORE_SERIALIZATION_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZMBT_CORE_SERIALIZATION_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/json.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="preprocessor_8hpp" kindref="compound">zmbt/core/preprocessor.hpp</ref>&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>IWYU<sp/>pragma:<sp/>export</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="core_8hpp" kindref="compound">zmbt/core.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ducktyping__traits__pp_8hpp" kindref="compound">ducktyping_traits_pp.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="signal__traits_8hpp" kindref="compound">signal_traits.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZMBT_INJECT_JSON_TAG_INVOKE<sp/>using<sp/>zmbt::reflect::tag_invoke;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZMBT_INJECT_OSTREAM_OPERATOR<sp/>using<sp/>zmbt::reflect::operator&lt;&lt;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZMBT_INJECT_SERIALIZATION<sp/>ZMBT_INJECT_JSON_TAG_INVOKE<sp/>ZMBT_INJECT_OSTREAM_OPERATOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZMBT_INJECT_JSON_TAG_INVOKE_INTO(...)<sp/>ZMBT_PP_INJECT_CODE_INTO_NS(ZMBT_INJECT_JSON_TAG_INVOKE,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZMBT_INJECT_OSTREAM_OPERATOR_INTO(...)<sp/>ZMBT_PP_INJECT_CODE_INTO_NS(ZMBT_INJECT_OSTREAM_OPERATOR,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZMBT_INJECT_SERIALIZATION_INTO(...)<sp/>ZMBT_PP_INJECT_CODE_INTO_NS(ZMBT_INJECT_SERIALIZATION,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacezmbt" kindref="compound">zmbt</ref><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">reflect<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="41" refid="structzmbt_1_1reflect_1_1serialization" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structzmbt_1_1reflect_1_1serialization" kindref="compound">serialization</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="49" refid="structzmbt_1_1reflect_1_1custom__serialization" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structzmbt_1_1reflect_1_1custom__serialization" kindref="compound">custom_serialization</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>E<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">default_serialization;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">default_serialization_t<sp/>=<sp/></highlight><highlight class="keyword">decltype</highlight><highlight class="normal">(default_serialization&lt;T&gt;::json_from(std::declval&lt;T&gt;()));</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">has_default_serialization<sp/>=<sp/>mp_valid&lt;default_serialization_t,<sp/>T&gt;;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">custom_serialization_t<sp/>=<sp/></highlight><highlight class="keyword">decltype</highlight><highlight class="normal">(<ref refid="structzmbt_1_1reflect_1_1custom__serialization" kindref="compound">custom_serialization&lt;T&gt;::json_from</ref>(std::declval&lt;T&gt;()));</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">has_custom_serialization<sp/>=<sp/>mp_valid&lt;custom_serialization_t,<sp/>T&gt;;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal">ZMBT_TRAIT_HAS_MEMBER(has_json_operator,<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>boost::json::value)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">is_json_convertible<sp/>=<sp/>mp_and&lt;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>is_constructible&lt;T,<sp/>boost::json::value&gt;,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>has_json_operator&lt;T&gt;</highlight></codeline>
<codeline lineno="77"><highlight class="normal">&gt;;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>R<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">enable_for_default_serialization<sp/>=<sp/>first_if_t&lt;R,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>mp_not&lt;has_custom_serialization&lt;T&gt;&gt;,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>has_default_serialization&lt;T&gt;</highlight></codeline>
<codeline lineno="84"><highlight class="normal">&gt;;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>R<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">enable_for_custom_serialization<sp/>=<sp/>first_if_t&lt;R,<sp/>has_custom_serialization&lt;T&gt;&gt;;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>R<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">enable_hermetic_serialization<sp/>=<sp/>first_if_any_t&lt;R,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>has_custom_serialization&lt;T&gt;,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>has_default_serialization&lt;T&gt;</highlight></codeline>
<codeline lineno="94"><highlight class="normal">&gt;;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>R<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">disable_hermetic_serialization<sp/>=<sp/>first_if_none_t&lt;R,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>has_custom_serialization&lt;T&gt;,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>has_default_serialization&lt;T&gt;</highlight></codeline>
<codeline lineno="100"><highlight class="normal">&gt;;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>detail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="105" refid="structzmbt_1_1reflect_1_1serialization_3_01T_00_01detail_1_1enable__for__default__serialization_3_01T_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structzmbt_1_1reflect_1_1serialization" kindref="compound">serialization</ref>&lt;T,<sp/>detail::enable_for_default_serialization&lt;T&gt;&gt;<sp/>:<sp/>detail::default_serialization&lt;T&gt;<sp/>{};</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="108" refid="structzmbt_1_1reflect_1_1serialization_3_01T_00_01detail_1_1enable__for__custom__serialization_3_01T_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structzmbt_1_1reflect_1_1serialization" kindref="compound">serialization</ref>&lt;T,<sp/>detail::enable_for_custom_serialization&lt;T&gt;&gt;<sp/>:<sp/><ref refid="structzmbt_1_1reflect_1_1custom__serialization" kindref="compound">custom_serialization</ref>&lt;T&gt;<sp/>{};</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="112"><highlight class="normal">detail::enable_hermetic_serialization&lt;T,<sp/>void&gt;</highlight></codeline>
<codeline lineno="113" refid="namespacezmbt_1_1reflect_1a3dfb6ab81c9456e5ddbbc023df43081e" refkind="member"><highlight class="normal">tag_invoke(boost::json::value_from_tag<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;,<sp/>boost::json::value&amp;<sp/>v,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>t)</highlight></codeline>
<codeline lineno="114"><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>v<sp/>=<sp/><ref refid="structzmbt_1_1reflect_1_1serialization" kindref="compound">serialization&lt;T&gt;::json_from</ref>(t);</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="120"><highlight class="normal">detail::enable_hermetic_serialization&lt;T,<sp/>T&gt;</highlight></codeline>
<codeline lineno="121" refid="namespacezmbt_1_1reflect_1aa637c52c70b61918c375d18a854c3cef" refkind="member"><highlight class="normal">tag_invoke(boost::json::value_to_tag&lt;T&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;,<sp/>boost::json::value<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>v)</highlight></codeline>
<codeline lineno="122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structzmbt_1_1reflect_1_1serialization" kindref="compound">serialization&lt;T&gt;::dejsonize</ref>(v);</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="128"><highlight class="normal">detail::enable_hermetic_serialization&lt;T,<sp/>std::ostream&amp;&gt;</highlight></codeline>
<codeline lineno="129"><highlight class="normal">operator&lt;&lt;<sp/>(std::ostream&amp;<sp/>os,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>value)</highlight></codeline>
<codeline lineno="130"><highlight class="normal">{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>serialization&lt;T&gt;::json_from(value);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os;</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>reflect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal">ZMBT_INJECT_SERIALIZATION</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>E<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="141" refid="structzmbt_1_1has__serialization" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structzmbt_1_1has__serialization" kindref="compound">has_serialization</ref><sp/>:<sp/>std::false_type<sp/>{<sp/>};</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structzmbt_1_1has__serialization" kindref="compound">has_serialization</ref>&lt;T,<sp/>void_t&lt;typename<sp/>reflect::serialization&lt;T&gt;<ref refid="namespacezmbt_1aa6dbe066c6a84f4ab7134b8d2ed20359" kindref="member">::type</ref>&gt;&gt;<sp/>:<sp/>std::true_type<sp/>{<sp/>};</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>TT<sp/>=<sp/>remove_cvref_t&lt;T&gt;&gt;</highlight></codeline>
<codeline lineno="148"><highlight class="normal">reflect::detail::disable_hermetic_serialization&lt;TT,<sp/>boost::json::value&gt;</highlight></codeline>
<codeline lineno="149"><highlight class="normal">json_from(T&amp;&amp;<sp/>t)</highlight></codeline>
<codeline lineno="150"><highlight class="normal">{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>boost::json::value_from(std::forward&lt;T&gt;(t));</highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="155"><highlight class="normal">reflect::detail::disable_hermetic_serialization&lt;T,<sp/>T&gt;</highlight></codeline>
<codeline lineno="156"><highlight class="normal">dejsonize(boost::json::value<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>v)</highlight></codeline>
<codeline lineno="157"><highlight class="normal">{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>boost::json::value_to&lt;T&gt;(v);</highlight></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>TT<sp/>=<sp/>remove_cvref_t&lt;T&gt;&gt;</highlight></codeline>
<codeline lineno="162"><highlight class="normal">reflect::detail::enable_hermetic_serialization&lt;TT,<sp/>boost::json::value&gt;</highlight></codeline>
<codeline lineno="163"><highlight class="normal">json_from(T&amp;&amp;<sp/>t)</highlight></codeline>
<codeline lineno="164"><highlight class="normal">{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>reflect::serialization&lt;TT&gt;::json_from(std::forward&lt;T&gt;(t));</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="169"><highlight class="normal">reflect::detail::enable_hermetic_serialization&lt;T,<sp/>T&gt;</highlight></codeline>
<codeline lineno="170"><highlight class="normal">dejsonize(boost::json::value<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>v)</highlight></codeline>
<codeline lineno="171"><highlight class="normal">{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>reflect::serialization&lt;T&gt;::dejsonize(v);</highlight></codeline>
<codeline lineno="173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Trivial<sp/>conversions<sp/>not<sp/>handled<sp/>by<sp/>Boost<sp/>JSON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>boost::json::value<sp/>json_from(std::tuple&lt;&gt;)</highlight></codeline>
<codeline lineno="178"><highlight class="normal">{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>boost::json::array{};</highlight></codeline>
<codeline lineno="180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::tuple&lt;&gt;<sp/>dejsonize&lt;std::tuple&lt;&gt;&gt;(boost::json::value<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;)</highlight></codeline>
<codeline lineno="183"><highlight class="normal">{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>check<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dejsonize&lt;void&gt;(boost::json::value<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;)</highlight></codeline>
<codeline lineno="190"><highlight class="normal">{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>check<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="199"><highlight class="normal">boost::json::value<sp/>json_from_array(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>(&amp;array)[N])</highlight></codeline>
<codeline lineno="200"><highlight class="normal">{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::json::array<sp/>out<sp/>{};</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>out.reserve(N);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>i++)</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out.push_back(zmbt::json_from(array[i]));</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dejsonize_array(boost::json::array<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>jarr,<sp/>T<sp/>(&amp;array)[N])</highlight></codeline>
<codeline lineno="213"><highlight class="normal">{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(jarr.size()<sp/>!=<sp/>N)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>serialization_error(</highlight><highlight class="stringliteral">&quot;JSON<sp/>array<sp/>size<sp/>mismatch<sp/>in<sp/>deserialization<sp/>of<sp/>`%s[%d]`&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zmbt::type_name&lt;T&gt;()<sp/>,<sp/>N);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>jarr_it<sp/>=<sp/>jarr.cbegin();</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>i++)</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array[i]<sp/>=<sp/>zmbt::dejsonize&lt;T&gt;(*jarr_it++);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>zmbt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>ZMBT_CORE_SERIALIZATION_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="serialization__defaults_8hpp" kindref="compound">serialization_defaults.hpp</ref>&quot;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>IWYU<sp/>pragma:<sp/>keep</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="zmbt-framework/zmbt-framework/backends/cxx/include/zmbt/reflect/serialization.hpp"/>
  </compounddef>
</doxygen>
